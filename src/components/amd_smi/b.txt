Available native events and hardware information.
--------------------------------------------------------------------------------
PAPI version             : 7.2.0.0
Operating system         : Linux 4.18.0-553.16.1.el8_10.x86_64
Vendor string and code   : AuthenticAMD (2, 0x2)
Model string and code    : AMD EPYC 7413 24-Core Processor (1, 0x1)
CPU revision             : 1.000000
CPUID                    : Family/Model/Stepping 25/1/1, 0x19/0x01/0x01
CPU Max MHz              : 3630
CPU Min MHz              : 1500
Total cores              : 96
SMT threads per core     : 2
Cores per socket         : 24
Sockets                  : 2
Cores per NUMA region    : 48
NUMA regions             : 2
Running in a VM          : no
Number Hardware Counters : NA
Max Multiplex Counters   : 512
Fast counter read (rdpmc): no
--------------------------------------------------------------------------------

===============================================================================
 Native Events in Component: rocm
===============================================================================
| rocm:::SQ_WAIT_INST_LDS                                                      |
|            Number of wave-cycles spent waiting for LDS instruction issue. In |
|            units of 4 cycles. (per-simd, nondeterministic)                   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCP_TA_DATA_STALL_CYCLES                                          |
|            TCP stalls TA data interface. Now Windowed.                       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::GRBM_COUNT                                                            |
|            Tie High - Count Number of Clocks                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::GRBM_GUI_ACTIVE                                                       |
|            The GUI is Active                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::GRBM_CP_BUSY                                                          |
|            Any of the Command Processor (CPG/CPC/CPF) blocks are busy.       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::GRBM_SPI_BUSY                                                         |
|            Any of the Shader Pipe Interpolators (SPI) are busy in the shader |
|            engine(s).                                                        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::GRBM_TA_BUSY                                                          |
|            Any of the Texture Pipes (TA) are busy in the shader engine(s).   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::GRBM_TC_BUSY                                                          |
|            Any of the Texture Cache Blocks (TCP/TCI/TCA/TCC) are busy.       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::GRBM_CPC_BUSY                                                         |
|            The Command Processor Compute (CPC) is busy.                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::GRBM_CPF_BUSY                                                         |
|            The Command Processor Fetchers (CPF) is busy.                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::GRBM_UTCL2_BUSY                                                       |
|            The Unified Translation Cache Level-2 (UTCL2) block is busy.      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::GRBM_EA_BUSY                                                          |
|            The Efficiency Arbiter (EA) block is busy.                        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPC_ME1_BUSY_FOR_PACKET_DECODE                                        |
|            Me1 busy for packet decode.                                       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPC_UTCL1_STALL_ON_TRANSLATION                                        |
|            One of the UTCL1s is stalled waiting on translation, XNACK or PEND|
|            ING response.                                                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPC_CPC_STAT_BUSY                                                     |
|            CPC Busy.                                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPC_CPC_STAT_IDLE                                                     |
|            CPC Idle.                                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPC_CPC_STAT_STALL                                                    |
|            CPC Stalled.                                                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPC_CPC_TCIU_BUSY                                                     |
|            CPC TCIU interface Busy.                                          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPC_CPC_TCIU_IDLE                                                     |
|            CPC TCIU interface Idle.                                          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPC_CPC_UTCL2IU_BUSY                                                  |
|            CPC UTCL2 interface Busy.                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPC_CPC_UTCL2IU_IDLE                                                  |
|            CPC UTCL2 interface Idle.                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPC_CPC_UTCL2IU_STALL                                                 |
|            CPC UTCL2 interface Stalled waiting on Free, Tags or Translation. |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPC_ME1_DC0_SPI_BUSY                                                  |
|            CPC Me1 Processor Busy.                                           |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPF_CMP_UTCL1_STALL_ON_TRANSLATION                                    |
|            One of the Compute UTCL1s is stalled waiting on translation, XNACK|
|             or PENDING response.                                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPF_CPF_STAT_BUSY                                                     |
|            CPF Busy.                                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPF_CPF_STAT_IDLE                                                     |
|            CPF Idle.                                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPF_CPF_STAT_STALL                                                    |
|            CPF Stalled.                                                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPF_CPF_TCIU_BUSY                                                     |
|            CPF TCIU interface Busy.                                          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPF_CPF_TCIU_IDLE                                                     |
|            CPF TCIU interface Idle.                                          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::CPF_CPF_TCIU_STALL                                                    |
|            CPF TCIU interface Stalled waiting on Free, Tags.                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_CSN_WINDOW_VALID                                                  |
|            Clock count enabled by perfcounter_start event. Requires SPI_DEBUG|
|            _CNTL.DEBUG_PIPE_SEL to select source, DEBUG_PIPE_SEL = 1, source |
|            is CS1; DEBUG_PIPE_SEL = 2, source is CS2; DEBUG_PIPE_SEL = 3, sou|
|            rce is CS3; default, source is CS0;                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_CSN_BUSY                                                          |
|            Number of clocks with outstanding waves (SPI or SH). Requires SPI_|
|            DEBUG_CNTL.DEBUG_PIPE_SEL to select source, DEBUG_PIPE_SEL = 1, so|
|            urce is CS1; DEBUG_PIPE_SEL = 2, source is CS2; DEBUG_PIPE_SEL = 3|
|            , source is CS3; default, source is CS0;                          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_CSN_NUM_THREADGROUPS                                              |
|            Number of threadgroups launched. Requires SPI_DEBUG_CNTL.DEBUG_PIP|
|            E_SEL to select source, DEBUG_PIPE_SEL = 1, source is CS1; DEBUG_P|
|            IPE_SEL = 2, source is CS2; DEBUG_PIPE_SEL = 3, source is CS3; def|
|            ault, source is CS0;                                              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_CSN_WAVE                                                          |
|            Number of waves. Requires SPI_DEBUG_CNTL.DEBUG_PIPE_SEL to select |
|            source, DEBUG_PIPE_SEL = 1, source is CS1; DEBUG_PIPE_SEL = 2, sou|
|            rce is CS2; DEBUG_PIPE_SEL = 3, source is CS3; default, source is |
|            CS0;                                                              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_RA_REQ_NO_ALLOC                                                   |
|            Arb cycles with requests but no allocation. Source is RA0         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_RA_REQ_NO_ALLOC_CSN                                               |
|            Arb cycles with CSn req and no CSn alloc. Source is RA0           |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_RA_RES_STALL_CSN                                                  |
|            Arb cycles with CSn req and no CSn fits. Source is RA0            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_RA_TMP_STALL_CSN                                                  |
|            Cycles where csn wants to req but does not fit in temp space.     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_RA_WAVE_SIMD_FULL_CSN                                             |
|            Sum of SIMD where WAVE can't take csn wave when !fits. Source is R|
|            A0                                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_RA_VGPR_SIMD_FULL_CSN                                             |
|            Sum of SIMD where VGPR can't take csn wave when !fits. Source is R|
|            A0                                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_RA_SGPR_SIMD_FULL_CSN                                             |
|            Sum of SIMD where SGPR can't take csn wave when !fits. Source is R|
|            A0                                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_RA_LDS_CU_FULL_CSN                                                |
|            Sum of CU where LDS can't take csn wave when !fits. Source is RA0 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_RA_BAR_CU_FULL_CSN                                                |
|            Sum of CU where BARRIER can't take csn wave when !fits. Source is |
|            RA0                                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_RA_BULKY_CU_FULL_CSN                                              |
|            Sum of CU where BULKY can't take csn wave when !fits. Source is RA|
|            0                                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_RA_TGLIM_CU_FULL_CSN                                              |
|            Cycles where csn wants to req but all CU are at tg_limit          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_RA_WVLIM_STALL_CSN                                                |
|            Number of clocks csn is stalled due to WAVE LIMIT.                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_SWC_CSC_WR                                                        |
|            Number of clocks to write CSC waves to SGPRs (need to multiply thi|
|            s value by 4) Requires SPI_DEBUG_CNTL.DEBUG_PIPE_SEL to select sou|
|            rce, DEBUG_PIPE_SEL = 1, source is CS1; DEBUG_PIPE_SEL = 2, source|
|             is CS2; DEBUG_PIPE_SEL = 3, source is CS3; default, source is CS0|
|            ;                                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SPI_VWC_CSC_WR                                                        |
|            Number of clocks to write CSC waves to VGPRs (need to multiply thi|
|            s value by 4) Requires SPI_DEBUG_CNTL.DEBUG_PIPE_SEL to select sou|
|            rce, DEBUG_PIPE_SEL = 1, source is CS1; DEBUG_PIPE_SEL = 2, source|
|             is CS2; DEBUG_PIPE_SEL = 3, source is CS3; default, source is CS0|
|            ;                                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_ACCUM_PREV                                                         |
|            For counter N, increment by the value of counter N-1. Only accumul|
|            ates once every 4 cycles.                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_CYCLES                                                             |
|            Clock cycles. (nondeterministic, per-simd, global)                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_BUSY_CYCLES                                                        |
|            Clock cycles while SQ is reporting that it is busy. (nondeterminis|
|            tic, per-simd, global)                                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_WAVES                                                              |
|            Count number of waves sent to SQs. (per-simd, emulated, global)   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_LEVEL_WAVES                                                        |
|            Track the number of waves. Set ACCUM_PREV for the next counter to |
|            use this. (level, per-simd, global)                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_WAVES_EQ_64                                                        |
|            Count number of waves with exactly 64 active threads sent to SQs. |
|            (per-simd, emulated, global)                                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_WAVES_LT_64                                                        |
|            Count number of waves with <64 active threads sent to SQs. (per-si|
|            md, emulated, global)                                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_WAVES_LT_48                                                        |
|            Count number of waves with <48 active threads sent to SQs. (per-si|
|            md, emulated, global)                                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_WAVES_LT_32                                                        |
|            Count number of waves sent <32 active threads sent to SQs. (per-si|
|            md, emulated, global)                                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_WAVES_LT_16                                                        |
|            Count number of waves sent <16 active threads sent to SQs. (per-si|
|            md, emulated, global)                                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_BUSY_CU_CYCLES                                                     |
|            Count quad-cycles each CU is busy. (nondeterministic, per-simd)   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_ITEMS                                                              |
|            Number of valid items per wave. (per-simd, global)                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS                                                              |
|            Number of instructions issued. (per-simd, emulated)               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU                                                         |
|            Number of VALU instructions issued. (per-simd, emulated)          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_ADD_F16                                                 |
|            Number of VALU ADD/SUB instructions on float16. (per-simd, emulate|
|            d)                                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_MUL_F16                                                 |
|            Number of VALU MUL instructions on float16. (per-simd, emulated)  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_FMA_F16                                                 |
|            Number of VALU FMA/MAD instructions on float16. (per-simd, emulate|
|            d)                                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_TRANS_F16                                               |
|            Number of VALU transcendental instructions on float16. (per-simd, |
|            emulated)                                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_ADD_F32                                                 |
|            Number of VALU ADD/SUB instructions on float32. (per-simd, emulate|
|            d)                                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_MUL_F32                                                 |
|            Number of VALU MUL instructions on float32. (per-simd, emulated)  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_FMA_F32                                                 |
|            Number of VALU FMA/MAD instructions on float32. (per-simd, emulate|
|            d)                                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_TRANS_F32                                               |
|            Number of VALU transcendental instructions on float32. (per-simd, |
|            emulated)                                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_ADD_F64                                                 |
|            Number of VALU ADD/SUB instructions on float64. (per-simd, emulate|
|            d)                                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_MUL_F64                                                 |
|            Number of VALU MUL instructions on float64. (per-simd, emulated)  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_FMA_F64                                                 |
|            Number of VALU FMA/MAD instructions on float64. (per-simd, emulate|
|            d)                                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_TRANS_F64                                               |
|            Number of VALU transcendental instructions on float64. (per-simd, |
|            emulated)                                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_INT32                                                   |
|            Number of VALU 32-bit integer (signed or unsigned) instructions. (|
|            per-simd, emulated)                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_INT64                                                   |
|            Number of VALU 64-bit integer (signed or unsigned) instructions. (|
|            per-simd, emulated)                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_CVT                                                     |
|            Number of VALU data conversion instructions. (per-simd, emulated) |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_MFMA_I8                                                 |
|            Number of VALU V_MFMA_*_I8 instructions. (per-simd, emulated)     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_MFMA_F16                                                |
|            Number of VALU V_MFMA_*_F16 instructions. (per-simd, emulated)    |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_MFMA_BF16                                               |
|            Number of VALU V_MFMA_*_BF16 instructions. (per-simd, emulated)   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_MFMA_F32                                                |
|            Number of VALU V_MFMA_*_F32 instructions. (per-simd, emulated)    |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_MFMA_F64                                                |
|            Number of VALU V_MFMA_*_F64 instructions. (per-simd, emulated)    |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_MFMA_MOPS_I8                                            |
|            Number of VALU matrix math operations (add or mul) performed divid|
|            ied by 512, assuming a full EXEC mask, of data type I8. (per-simd,|
|             emulated)                                                        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_MFMA_MOPS_F16                                           |
|            Number of VALU matrix math operations (add or mul) performed divid|
|            ied by 512, assuming a full EXEC mask, of data type F16. (per-simd|
|            , emulated)                                                       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_MFMA_MOPS_BF16                                          |
|            Number of VALU matrix math operations (add or mul) performed divid|
|            ied by 512, assuming a full EXEC mask, of data type BF16. (per-sim|
|            d, emulated)                                                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_MFMA_MOPS_F32                                           |
|            Number of VALU matrix math operations (add or mul) performed divid|
|            ied by 512, assuming a full EXEC mask, of data type F32. (per-simd|
|            , emulated)                                                       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VALU_MFMA_MOPS_F64                                           |
|            Number of VALU matrix math operations (add or mul) performed divid|
|            ied by 512, assuming a full EXEC mask, of data type F64. (per-simd|
|            , emulated)                                                       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_MFMA                                                         |
|            Number of MFMA instructions issued. (per-simd, emulated)          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VMEM_WR                                                      |
|            Number of VMEM write instructions issued (including FLAT). (per-si|
|            md, emulated)                                                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VMEM_RD                                                      |
|            Number of VMEM read instructions issued (including FLAT). (per-sim|
|            d, emulated)                                                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VMEM                                                         |
|            Number of VMEM instructions issued. (per-simd, emulated)          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_SALU                                                         |
|            Number of SALU instructions issued. (per-simd, emulated)          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_SMEM                                                         |
|            Number of SMEM instructions issued. (per-simd, emulated)          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_FLAT                                                         |
|            Number of FLAT instructions issued. (per-simd, emulated)          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_FLAT_LDS_ONLY                                                |
|            Number of FLAT instructions issued that read/wrote only from/to LD|
|            S (only works if EARLY_TA_DONE is enabled). (per-simd, emulated)  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_LDS                                                          |
|            Number of LDS instructions issued (including FLAT). (per-simd, emu|
|            lated)                                                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_GDS                                                          |
|            Number of GDS instructions issued. (per-simd, emulated)           |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_EXP_GDS                                                      |
|            Number of EXP and GDS instructions issued, excluding skipped expor|
|            t instructions. (per-simd, emulated)                              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_BRANCH                                                       |
|            Number of Branch instructions issued. (per-simd, emulated)        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_SENDMSG                                                      |
|            Number of Sendmsg instructions issued. (per-simd, emulated)       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_VSKIPPED                                                     |
|            Number of vector instructions skipped. (per-simd, emulated)       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INST_LEVEL_VMEM                                                    |
|            Number of in-flight VMEM instructions. Set next counter to ACCUM_P|
|            REV and divide by INSTS_VMEM for average latency. Includes FLAT in|
|            structions. (per-simd, level, nondeterministic)                   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INST_LEVEL_SMEM                                                    |
|            Number of in-flight SMEM instructions (*2 load/store; *2 atomic; *|
|            2 memtime; *4 wb/inv). Set next counter to ACCUM_PREV and divide b|
|            y INSTS_SMEM for average latency per smem request. Falls slightly |
|            short of total request latency because some fetches are divided in|
|            to two requests that may finish at different times and this counte|
|            r collects the average latency of the two. (per-simd, level, nonde|
|            terministic)                                                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INST_LEVEL_LDS                                                     |
|            Number of in-flight LDS instructions. Set next counter to ACCUM_PR|
|            EV and divide by INSTS_LDS for average latency. Includes FLAT inst|
|            ructions. (per-simd, level, nondeterministic)                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_VALU_MFMA_BUSY_CYCLES                                              |
|            Number of cycles the MFMA ALU is busy (per-simd, emulated)        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_WAVE_CYCLES                                                        |
|            Number of wave-cycles spent by waves in the CUs (per-simd, nondete|
|            rministic). Units in quad-cycles(4 cycles)                        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_WAIT_ANY                                                           |
|            Number of wave-cycles spent waiting for anything (per-simd, nondet|
|            erministic). Units in quad-cycles(4 cycles)                       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_WAIT_INST_ANY                                                      |
|            Number of wave-cycles spent waiting for any instruction issue. In |
|            units of 4 cycles. (per-simd, nondeterministic)                   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_ACTIVE_INST_ANY                                                    |
|            Number of cycles each wave is working on an instruction. (per-simd|
|            , emulated). Units in quad-cycles(4 cycles)                       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_ACTIVE_INST_VMEM                                                   |
|            Number of cycles the SQ instruction arbiter is working on a VMEM i|
|            nstruction. (per-simd, emulated). Units in quad-cycles(4 cycles)  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_ACTIVE_INST_LDS                                                    |
|            Number of cycles the SQ instruction arbiter is working on a LDS in|
|            struction. (per-simd, emulated). Units in quad-cycles(4 cycles)   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_ACTIVE_INST_VALU                                                   |
|            Number of cycles the SQ instruction arbiter is working on a VALU i|
|            nstruction. (per-simd, emulated). Units in quad-cycles(4 cycles)  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_ACTIVE_INST_SCA                                                    |
|            Number of cycles the SQ instruction arbiter is working on a SALU o|
|            r SMEM instruction. (per-simd, emulated). Units in quad-cycles(4 c|
|            ycles)                                                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_ACTIVE_INST_EXP_GDS                                                |
|            Number of cycles the SQ instruction arbiter is working on an EXPOR|
|            T or GDS instruction. (per-simd, emulated). Units in quad-cycles(4|
|             cycles)                                                          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_ACTIVE_INST_MISC                                                   |
|            Number of cycles the SQ instruction aribter is working on a BRANCH|
|             or SENDMSG instruction. (per-simd, emulated). Units in quad-cycle|
|            s(4 cycles)                                                       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_ACTIVE_INST_FLAT                                                   |
|            Number of cycles the SQ instruction arbiter is working on a FLAT i|
|            nstruction. (per-simd, emulated). Units in quad-cycles(4 cycles)  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INST_CYCLES_VMEM_WR                                                |
|            Number of cycles needed to send addr and cmd data for VMEM write i|
|            nstructions. (per-simd, emulated). Units in quad-cycles(4 cycles) |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INST_CYCLES_VMEM_RD                                                |
|            Number of cycles needed to send addr and cmd data for VMEM read in|
|            structions. (per-simd, emulated). Units in quad-cycles(4 cycles)  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INST_CYCLES_SMEM                                                   |
|            Number of cycles needed to execute scalar memory reads. (per-simd,|
|             emulated)                                                        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INST_CYCLES_SALU                                                   |
|            Number of cycles needed to execute non-memory read scalar operatio|
|            ns. (per-simd, emulated). Units in quad-cycles(4 cycles)          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_THREAD_CYCLES_VALU                                                 |
|            Number of thread-cycles used to execute VALU operations (similar t|
|            o INST_CYCLES_VALU but multiplied by # of active threads). (per-si|
|            md)                                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_IFETCH                                                             |
|            Number of instruction fetch requests from cache. (per-simd, emulat|
|            ed)                                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_IFETCH_LEVEL                                                       |
|            Number of instruction fetch requests from cache. (per-simd, level)|
|                                                                              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_LDS_BANK_CONFLICT                                                  |
|            Number of cycles LDS is stalled by bank conflicts. (emulated)     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_LDS_ADDR_CONFLICT                                                  |
|            Number of cycles LDS is stalled by address conflicts. (emulated,no|
|            ndeterministic)                                                   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_LDS_UNALIGNED_STALL                                                |
|            Number of cycles LDS is stalled processing flat unaligned load/sto|
|            re ops. (emulated)                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_LDS_MEM_VIOLATIONS                                                 |
|            Number of threads that have a memory violation in the LDS.(emulate|
|            d)                                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_LDS_ATOMIC_RETURN                                                  |
|            Number of atomic return cycles in LDS. (per-simd, emulated)       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_LDS_IDX_ACTIVE                                                     |
|            Number of cycles LDS is used for indexed (non-direct,non-interpola|
|            tion) operations. (per-simd, emulated)                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_ACCUM_PREV_HIRES                                                   |
|            For counter N, increment by the value of counter N-1.             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_WAVES_RESTORED                                                     |
|            Count number of context-restored waves sent to SQs. (per-simd, emu|
|            lated, global)                                                    |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_WAVES_SAVED                                                        |
|            Count number of context-saved waves. (per-simd, emulated, global) |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQ_INSTS_SMEM_NORM                                                    |
|            Number of SMEM instructions issued normalized to match smem_level |
|            (*2 load/store; *2 atomic; *2 memtime; *4 wb/inv). (per-simd, emul|
|            ated)                                                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_DCACHE_INPUT_VALID_READYB                                         |
|            Input stalled by SQC (per-SQ, nondeterministic, unwindowed)       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_TC_REQ                                                            |
|            Total number of TC requests that were issued by instruction and co|
|            nstant caches. (No-Masking, nondeterministic)                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_TC_INST_REQ                                                       |
|            Number of insruction requests to the TC (No-Masking, nondeterminis|
|            tic)                                                              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_TC_DATA_READ_REQ                                                  |
|            Number of data read requests to the TC (No-Masking, nondeterminist|
|            ic)                                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_TC_DATA_WRITE_REQ                                                 |
|            Number of data write requests to the TC (No-Masking, nondeterminis|
|            tic)                                                              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_TC_DATA_ATOMIC_REQ                                                |
|            Number of data atomic requests to the TC (No-Masking, nondetermini|
|            stic)                                                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_TC_STALL                                                          |
|            Valid request stalled TC request interface (no-credits). (No-Maski|
|            ng, nondeterministic, unwindowed)                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_ICACHE_REQ                                                        |
|            Number of requests. (per-SQ, per-Bank)                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_ICACHE_HITS                                                       |
|            Number of cache hits. (per-SQ, per-Bank, nondeterministic)        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_ICACHE_MISSES                                                     |
|            Number of cache misses, includes uncached requests. (per-SQ, per-B|
|            ank, nondeterministic)                                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_ICACHE_MISSES_DUPLICATE                                           |
|            Number of misses that were duplicates (access to a non-resident, m|
|            iss pending CL). (per-SQ, per-Bank, nondeterministic)             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_DCACHE_REQ                                                        |
|            Number of requests (post-bank-serialization). (per-SQ, per-Bank)  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_DCACHE_HITS                                                       |
|            Number of cache hits. (per-SQ, per-Bank, nondeterministic)        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_DCACHE_MISSES                                                     |
|            Number of cache misses, includes uncached requests. (per-SQ, per-B|
|            ank, nondeterministic)                                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_DCACHE_MISSES_DUPLICATE                                           |
|            Number of misses that were duplicates (access to a non-resident, m|
|            iss pending CL). (per-SQ, per-Bank, nondeterministic)             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_DCACHE_ATOMIC                                                     |
|            Number of atomic requests. (per-SQ, per-Bank)                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_DCACHE_REQ_READ_1                                                 |
|            Number of constant cache 1 dw read requests. (per-SQ)             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_DCACHE_REQ_READ_2                                                 |
|            Number of constant cache 2 dw read requests. (per-SQ)             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_DCACHE_REQ_READ_4                                                 |
|            Number of constant cache 4 dw read requests. (per-SQ)             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_DCACHE_REQ_READ_8                                                 |
|            Number of constant cache 8 dw read requests. (per-SQ)             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SQC_DCACHE_REQ_READ_16                                                |
|            Number of constant cache 16 dw read requests. (per-SQ)            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_TA_BUSY                                                            |
|            TA block is busy. Perf_Windowing not supported for this counter.  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TA_TOTAL_WAVEFRONTS                                                   |
|            Total number of wavefronts processed by TA.                       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TA_BUFFER_WAVEFRONTS                                                  |
|            Number of buffer wavefronts processed by TA.                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TA_BUFFER_READ_WAVEFRONTS                                             |
|            Number of buffer read wavefronts processed by TA.                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TA_BUFFER_WRITE_WAVEFRONTS                                            |
|            Number of buffer write wavefronts processed by TA.                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TA_BUFFER_ATOMIC_WAVEFRONTS                                           |
|            Number of buffer atomic wavefronts processed by TA.               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TA_BUFFER_TOTAL_CYCLES                                                |
|            Number of buffer cycles issued to TC.                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TA_BUFFER_COALESCED_READ_CYCLES                                       |
|            Number of buffer coalesced read cycles issued to TC.              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TA_BUFFER_COALESCED_WRITE_CYCLES                                      |
|            Number of buffer coalesced write cycles issued to TC.             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TA_ADDR_STALLED_BY_TC_CYCLES                                          |
|            Number of cycles addr path stalled by TC. Perf_Windowing not suppo|
|            rted for this counter.                                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TA_ADDR_STALLED_BY_TD_CYCLES                                          |
|            Number of cycles addr path stalled by TD. Perf_Windowing not suppo|
|            rted for this counter.                                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TA_DATA_STALLED_BY_TC_CYCLES                                          |
|            Number of cycles data path stalled by TC. Perf_Windowing not suppo|
|            rted for this counter.                                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TA_FLAT_WAVEFRONTS                                                    |
|            Number of flat opcode wavfronts processed by the TA.              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TA_FLAT_READ_WAVEFRONTS                                               |
|            Number of flat opcode reads processed by the TA.                  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TA_FLAT_WRITE_WAVEFRONTS                                              |
|            Number of flat opcode writes processed by the TA.                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TA_FLAT_ATOMIC_WAVEFRONTS                                             |
|            Number of flat opcode atomics processed by the TA.                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TD_TD_BUSY                                                            |
|            TD is processing or waiting for data. Perf_Windowing not supported|
|             for this counter.                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TD_TC_STALL                                                           |
|            TD is stalled waiting for TC data.                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TD_SPI_STALL                                                          |
|            TD is stalled SPI vinit                                           |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TD_LOAD_WAVEFRONT                                                     |
|            Count the wavefronts with opcode = load, include atomics and store|
|            .                                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TD_ATOMIC_WAVEFRONT                                                   |
|            Count the wavefronts with opcode = atomic.                        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TD_STORE_WAVEFRONT                                                    |
|            Count the wavefronts with opcode = store.                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TD_COALESCABLE_WAVEFRONT                                              |
|            Count wavefronts that TA finds coalescable.                       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_GATE_EN1                                                          |
|            TCP interface clocks are turned on. Not Windowed.                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_GATE_EN2                                                          |
|            TCP core clocks are turned on. Not Windowed.                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TD_TCP_STALL_CYCLES                                               |
|            TD stalls TCP                                                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCR_TCP_STALL_CYCLES                                              |
|            TCR stalls TCP_TCR_req interface                                  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_READ_TAGCONFLICT_STALL_CYCLES                                     |
|            Tagram conflict stall on a read                                   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_WRITE_TAGCONFLICT_STALL_CYCLES                                    |
|            Tagram conflict stall on a write                                  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_ATOMIC_TAGCONFLICT_STALL_CYCLES                                   |
|            Tagram conflict stall on an atomic                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_PENDING_STALL_CYCLES                                              |
|            Stall due to data pending from L2                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TA_TCP_STATE_READ                                                 |
|            Number of state reads                                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_VOLATILE                                                          |
|            Total number of L1 volatile pixels/buffers from TA                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TOTAL_ACCESSES                                                    |
|            Total number of pixels/buffers from TA. Equals TCP_PERF_SEL_TOTAL_|
|            READ+TCP_PERF_SEL_TOTAL_NONREAD                                   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TOTAL_READ                                                        |
|            Total number of read pixels/buffers from TA. Equals TCP_PERF_SEL_T|
|            OTAL_HIT_LRU_READ + TCP_PERF_SEL_TOTAL_MISS_LRU_READ + TCP_PERF_SE|
|            L_TOTAL_MISS_EVICT_READ                                           |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TOTAL_WRITE                                                       |
|            Total number of local write pixels/buffers from TA. Equals TCP_PER|
|            F_SEL_TOTAL_MISS_LRU_WRITE+ TCP_PERF_SEL_TOTAL_MISS_EVICT_WRITE   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TOTAL_ATOMIC_WITH_RET                                             |
|            Total number of atomic with return pixels/buffers from TA         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TOTAL_ATOMIC_WITHOUT_RET                                          |
|            Total number of atomic without return pixels/buffers from TA      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TOTAL_WRITEBACK_INVALIDATES                                       |
|            Total number of cache invalidates. Equals TCP_PERF_SEL_TOTAL_WBINV|
|            L1+ TCP_PERF_SEL_TOTAL_WBINVL1_VOL+ TCP_PERF_SEL_CP_TCP_INVALIDATE|
|            + TCP_PERF_SEL_SQ_TCP_INVALIDATE_VOL. Not Windowed.               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_UTCL1_REQUEST                                                     |
|            Total CLIENT_UTCL1 NORMAL requests                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_UTCL1_TRANSLATION_MISS                                            |
|            Total utcl1 translation misses                                    |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_UTCL1_TRANSLATION_HIT                                             |
|            Total utcl1 translation hits                                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_UTCL1_PERMISSION_MISS                                             |
|            Total utcl1 permission misses                                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TOTAL_CACHE_ACCESSES                                              |
|            Count of total cache line (tag) accesses (includes hits and misses|
|            ).                                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCP_LATENCY                                                       |
|            Total TCP wave latency (from first clock of wave entering to first|
|             clock of wave leaving), divide by TA_TCP_STATE_READ to avg wave l|
|            atency                                                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_READ_REQ_LATENCY                                              |
|            Total TCP->TCC request latency for reads and atomics with return. |
|            Not Windowed.                                                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_WRITE_REQ_LATENCY                                             |
|            Total TCP->TCC request latency for writes and atomics without retu|
|            rn. Not Windowed.                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_READ_REQ                                                      |
|            Total read requests from TCP to all TCCs                          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_WRITE_REQ                                                     |
|            Total write requests from TCP to all TCCs                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_ATOMIC_WITH_RET_REQ                                           |
|            Total atomic with return requests from TCP to all TCCs            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_ATOMIC_WITHOUT_RET_REQ                                        |
|            Total atomic without return requests from TCP to all TCCs         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_NC_READ_REQ                                                   |
|            Total read requests with NC mtype from this TCP to all TCCs       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_NC_WRITE_REQ                                                  |
|            Total write requests with NC mtype from this TCP to all TCCs      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_NC_ATOMIC_REQ                                                 |
|            Total atomic requests with NC mtype from this TCP to all TCCs     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_UC_READ_REQ                                                   |
|            Total read requests with UC mtype from this TCP to all TCCs       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_UC_WRITE_REQ                                                  |
|            Total write requests with UC mtype from this TCP to all TCCs      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_UC_ATOMIC_REQ                                                 |
|            Total atomic requests with UC mtype from this TCP to all TCCs     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_CC_READ_REQ                                                   |
|            Total write requests with CC mtype from this TCP to all TCCs      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_CC_WRITE_REQ                                                  |
|            Total write requests with CC mtype from this TCP to all TCCs      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_CC_ATOMIC_REQ                                                 |
|            Total atomic requests with CC mtype from this TCP to all TCCs     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_RW_READ_REQ                                                   |
|            Total write requests with RW mtype from this TCP to all TCCs      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_RW_WRITE_REQ                                                  |
|            Total write requests with RW mtype from this TCP to all TCCs      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_RW_ATOMIC_REQ                                                 |
|            Total atomic requests with RW mtype from this TCP to all TCCs     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-15]                      |
--------------------------------------------------------------------------------
| rocm:::TCA_CYCLE                                                             |
|            Number of cycles. Not windowable.                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCA_BUSY                                                              |
|            Number of cycles we have a request pending. Not windowable.       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_CYCLE                                                             |
|            Number of cycles. Not windowable.                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_BUSY                                                              |
|            Number of cycles we have a request pending. Not windowable.       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_REQ                                                               |
|            Number of requests of all types. This is measured at the tag block|
|            . This may be more than the number of requests arriving at the TCC|
|            , but it is a good indication of the total amount of work that nee|
|            ds to be performed.                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_STREAMING_REQ                                                     |
|            Number of streaming requests. This is measured at the tag block.  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_NC_REQ                                                            |
|            The number of noncoherently cached requests. This is measured at t|
|            he tag block.                                                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_UC_REQ                                                            |
|            The number of uncached requests. This is measured at the tag block|
|            .                                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_CC_REQ                                                            |
|            The number of coherently cached requests. This is measured at the |
|            tag block.                                                        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_RW_REQ                                                            |
|            The number of RW requests. This is measured at the tag block.     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_PROBE                                                             |
|            Number of probe requests. Not windowable.                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_PROBE_ALL                                                         |
|            Number of external probe requests with with EA_TCC_preq_all== 1. N|
|            ot windowable.                                                    |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_READ                                                              |
|            Number of read requests. Compressed reads are included in this, bu|
|            t metadata reads are not included.                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_WRITE                                                             |
|            Number of write requests.                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_ATOMIC                                                            |
|            Number of atomic requests of all types.                           |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_HIT                                                               |
|            Number of cache hits.                                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_MISS                                                              |
|            Number of cache misses. UC reads count as misses.                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_WRITEBACK                                                         |
|            Number of lines written back to main memory. This includes writeba|
|            cks of dirty lines and uncached write/atomic requests.            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WRREQ                                                          |
|            Number of transactions (either 32-byte or 64-byte) going over the |
|            TC_EA_wrreq interface. Atomics may travel over the same interface |
|            and are generally classified as write requests. This does not incl|
|            ude probe commands.                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WRREQ_64B                                                      |
|            Number of 64-byte transactions going (64-byte write or CMPSWAP) ov|
|            er the TC_EA_wrreq interface.                                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WR_UNCACHED_32B                                                |
|            Number of 32-byte write/atomic going over the TC_EA_wrreq interfac|
|            e due to uncached traffic. Note that CC mtypes can produce uncache|
|            d requests, and those are included in this. A 64-byte request will|
|             be counted as 2                                                  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WRREQ_STALL                                                    |
|            Number of cycles a write request was stalled.                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WRREQ_IO_CREDIT_STALL                                          |
|            Number of cycles a EA write request was stalled because the interf|
|            ace was out of IO credits.                                        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WRREQ_GMI_CREDIT_STALL                                         |
|            Number of cycles a EA write request was stalled because the interf|
|            ace was out of GMI credits.                                       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WRREQ_DRAM_CREDIT_STALL                                        |
|            Number of cycles a EA write request was stalled because the interf|
|            ace was out of DRAM credits.                                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_TOO_MANY_EA_WRREQS_STALL                                          |
|            Number of cycles the TCC could not send a EA write request because|
|             it already reached its maximum number of pending EA write request|
|            s.                                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WRREQ_LEVEL                                                    |
|            The sum of the number of EA write requests in flight. This is prim|
|            arily meant for measure average EA write latency. Average write la|
|            tency = TCC_PERF_SEL_EA_WRREQ_LEVEL/TCC_PERF_SEL_EA_WRREQ.        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_ATOMIC                                                         |
|            Number of transactions going over the TC_EA_wrreq interface that a|
|            re actually atomic requests.                                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_ATOMIC_LEVEL                                                   |
|            The sum of the number of EA atomics in flight. This is primarily m|
|            eant for measure average EA atomic latency. Average atomic latency|
|             = TCC_PERF_SEL_EA_WRREQ_ATOMIC_LEVEL/TCC_PERF_SEL_EA_WRREQ_ATOMIC|
|            .                                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_RDREQ                                                          |
|            Number of TCC/EA read requests (either 32-byte or 64-byte)        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_RDREQ_32B                                                      |
|            Number of 32-byte TCC/EA read requests                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_RD_UNCACHED_32B                                                |
|            Number of 32-byte TCC/EA read due to uncached traffic. A 64-byte r|
|            equest will be counted as 2                                       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_RDREQ_IO_CREDIT_STALL                                          |
|            Number of cycles there was a stall because the read request interf|
|            ace was out of IO credits. Stalls occur regardless of whether a re|
|            ad needed to be performed or not.                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_RDREQ_GMI_CREDIT_STALL                                         |
|            Number of cycles there was a stall because the read request interf|
|            ace was out of GMI credits. Stalls occur regardless of whether a r|
|            ead needed to be performed or not.                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_RDREQ_DRAM_CREDIT_STALL                                        |
|            Number of cycles there was a stall because the read request interf|
|            ace was out of DRAM credits. Stalls occur regardless of whether a |
|            read needed to be performed or not.                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_RDREQ_LEVEL                                                    |
|            The sum of the number of TCC/EA read requests in flight. This is p|
|            rimarily meant for measure average EA read latency. Average read l|
|            atency = TCC_PERF_SEL_EA_RDREQ_LEVEL/TCC_PERF_SEL_EA_RDREQ.       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_TAG_STALL                                                         |
|            Number of cycles the normal request pipeline in the tag was stalle|
|            d for any reason. Normally, stalls of this nature are measured exa|
|            ctly from one point the pipeline, but that is not the case for thi|
|            s counter. Probes can stall the pipeline at a variety of places, a|
|            nd there is no single point that can reasonably measure the total |
|            stalls accurately.                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_NORMAL_WRITEBACK                                                  |
|            Number of writebacks due to requests that are not writeback reques|
|            ts.                                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_ALL_TC_OP_WB_WRITEBACK                                            |
|            Number of writebacks due to all TC_OP writeback requests.         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_NORMAL_EVICT                                                      |
|            Number of evictions due to requests that are not invalidate or pro|
|            be requests.                                                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_ALL_TC_OP_INV_EVICT                                               |
|            Number of evictions due to all TC_OP invalidate requests.         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_RDREQ_DRAM                                                     |
|            Number of TCC/EA read requests (either 32-byte or 64-byte) destine|
|            d for DRAM (MC).                                                  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WRREQ_DRAM                                                     |
|            Number of TCC/EA write requests (either 32-byte of 64-byte) destin|
|            ed for DRAM (MC).                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
|     :instance=0                                                              |
|            Mandatory instance qualifier in range [0-31]                      |
--------------------------------------------------------------------------------
| rocm:::MeanOccupancyPerCU                                                    |
|            Mean occupancy per compute unit.                                  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SIMD_UTILIZATION                                                      |
|            Percent of time at least one warp was active on a multiprocessor, |
|            averaged over all multiprocessors.                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::MeanOccupancyPerActiveCU                                              |
|            Mean occupancy per active compute unit.                           |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_TA_BUSY_sum                                                        |
|            TA block is busy. Perf_Windowing not supported for this counter. S|
|            um over TA instances.                                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_TOTAL_WAVEFRONTS_sum                                               |
|            Total number of wavefronts processed by TA. Sum over TA instances.|
|                                                                              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_ADDR_STALLED_BY_TC_CYCLES_sum                                      |
|            Number of cycles addr path stalled by TC. Perf_Windowing not suppo|
|            rted for this counter. Sum over TA instances.                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_ADDR_STALLED_BY_TD_CYCLES_sum                                      |
|            Number of cycles addr path stalled by TD. Perf_Windowing not suppo|
|            rted for this counter. Sum over TA instances.                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_DATA_STALLED_BY_TC_CYCLES_sum                                      |
|            Number of cycles data path stalled by TC. Perf_Windowing not suppo|
|            rted for this counter. Sum over TA instances.                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_FLAT_WAVEFRONTS_sum                                                |
|            Number of flat opcode wavfronts processed by the TA. Sum over TA i|
|            nstances.                                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_FLAT_READ_WAVEFRONTS_sum                                           |
|            Number of flat opcode reads processed by the TA. Sum over TA insta|
|            nces.                                                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_FLAT_ATOMIC_WAVEFRONTS_sum                                         |
|            Number of flat opcode atomics processed by the TA. Sum over TA ins|
|            tances.                                                           |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_BUFFER_WAVEFRONTS_sum                                              |
|            Number of buffer wavefronts processed by TA. Sum over TA instances|
|            .                                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_BUFFER_READ_WAVEFRONTS_sum                                         |
|            Number of buffer read wavefronts processed by TA. Sum over TA inst|
|            ances.                                                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_BUFFER_WRITE_WAVEFRONTS_sum                                        |
|            Number of buffer write wavefronts processed by TA. Sum over TA ins|
|            tances.                                                           |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_BUFFER_ATOMIC_WAVEFRONTS_sum                                       |
|            Number of buffer atomic wavefronts processed by TA. Sum over TA in|
|            stances.                                                          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_BUFFER_TOTAL_CYCLES_sum                                            |
|            Number of buffer cycles issued to TC. Sum over TA instances.      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_BUFFER_COALESCED_READ_CYCLES_sum                                   |
|            Number of buffer coalesced read cycles issued to TC. Sum over TA i|
|            nstances.                                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_BUFFER_COALESCED_WRITE_CYCLES_sum                                  |
|            Number of buffer coalesced write cycles issued to TC. Sum over TA |
|            instances.                                                        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TD_TD_BUSY_sum                                                        |
|            TD is processing or waiting for data. Perf_Windowing not supported|
|             for this counter. Sum over TD instances.                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TD_TC_STALL_sum                                                       |
|            TD is stalled waiting for TC data. Sum over TD instances.         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TD_LOAD_WAVEFRONT_sum                                                 |
|            Count the wavefronts with opcode = load, include atomics and store|
|            . Sum over TD instances.                                          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TD_ATOMIC_WAVEFRONT_sum                                               |
|            Count the wavefronts with opcode = atomic. Sum over TD instances. |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TD_STORE_WAVEFRONT_sum                                                |
|            Count the wavefronts with opcode = store. Sum over TD instances.  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TD_COALESCABLE_WAVEFRONT_sum                                          |
|            Count wavefronts that TA finds coalescable. Sum over TD instances.|
|                                                                              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TD_SPI_STALL_sum                                                      |
|            TD is stalled SPI vinit, sum of TCP instances                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_GATE_EN1_sum                                                      |
|            TCP interface clocks are turned on. Not Windowed. Sum over TCP ins|
|            tances.                                                           |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_GATE_EN2_sum                                                      |
|            TCP core clocks are turned on. Not Windowed. Sum over TCP instance|
|            s.                                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TD_TCP_STALL_CYCLES_sum                                           |
|            TD stalls TCP. Sum over TCP instances.                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCR_TCP_STALL_CYCLES_sum                                          |
|            TCR stalls TCP_TCR_req interface. Sum over TCP instances.         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_READ_TAGCONFLICT_STALL_CYCLES_sum                                 |
|            Tagram conflict stall on a read. Sum over TCP instances.          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_WRITE_TAGCONFLICT_STALL_CYCLES_sum                                |
|            Tagram conflict stall on a write. Sum over TCP instances.         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_ATOMIC_TAGCONFLICT_STALL_CYCLES_sum                               |
|            Tagram conflict stall on an atomic. Sum over TCP instances.       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_VOLATILE_sum                                                      |
|            Total number of L1 volatile pixels/buffers from TA. Sum over TCP i|
|            nstances.                                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TOTAL_ACCESSES_sum                                                |
|            Total number of pixels/buffers from TA. Equals TCP_PERF_SEL_TOTAL_|
|            READ+TCP_PERF_SEL_TOTAL_NONREAD. Sum over TCP instances.          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TOTAL_READ_sum                                                    |
|            Total number of read pixels/buffers from TA. Equals TCP_PERF_SEL_T|
|            OTAL_HIT_LRU_READ + TCP_PERF_SEL_TOTAL_MISS_LRU_READ + TCP_PERF_SE|
|            L_TOTAL_MISS_EVICT_READ. Sum over TCP instances.                  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TOTAL_WRITE_sum                                                   |
|            Total number of local write pixels/buffers from TA. Equals TCP_PER|
|            F_SEL_TOTAL_MISS_LRU_WRITE+ TCP_PERF_SEL_TOTAL_MISS_EVICT_WRITE. S|
|            um over TCP instances.                                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TOTAL_ATOMIC_WITH_RET_sum                                         |
|            Total number of atomic with return pixels/buffers from TA. Sum ove|
|            r TCP instances.                                                  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TOTAL_ATOMIC_WITHOUT_RET_sum                                      |
|            Total number of atomic without return pixels/buffers from TA Sum o|
|            ver TCP instances.                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TOTAL_WRITEBACK_INVALIDATES_sum                                   |
|            Total number of cache invalidates. Equals TCP_PERF_SEL_TOTAL_WBINV|
|            L1+ TCP_PERF_SEL_TOTAL_WBINVL1_VOL+ TCP_PERF_SEL_CP_TCP_INVALIDATE|
|            + TCP_PERF_SEL_SQ_TCP_INVALIDATE_VOL. Not Windowed. Sum over TCP i|
|            nstances.                                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_UTCL1_REQUEST_sum                                                 |
|            Total CLIENT_UTCL1 NORMAL requests Sum over TCP instances.        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_UTCL1_TRANSLATION_MISS_sum                                        |
|            Total utcl1 translation misses Sum over TCP instances.            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_UTCL1_TRANSLATION_HIT_sum                                         |
|            Total utcl1 translation hits Sum over TCP instances.              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_UTCL1_PERMISSION_MISS_sum                                         |
|            Total utcl1 permission misses Sum over TCP instances.             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TOTAL_CACHE_ACCESSES_sum                                          |
|            Count of total cache line (tag) accesses (includes hits and misses|
|            ). Sum over TCP instances.                                        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCP_LATENCY_sum                                                   |
|            Total TCP wave latency (from first clock of wave entering to first|
|             clock of wave leaving), divide by TA_TCP_STATE_READ to avg wave l|
|            atency Sum over TCP instances.                                    |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TA_TCP_STATE_READ_sum                                             |
|            Number of state reads Sum over TCP instances.                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_READ_REQ_LATENCY_sum                                          |
|            Total TCP->TCC request latency for reads and atomics with return. |
|            Not Windowed. Sum over TCP instances.                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_WRITE_REQ_LATENCY_sum                                         |
|            Total TCP->TCC request latency for writes and atomics without retu|
|            rn. Not Windowed. Sum over TCP instances.                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_READ_REQ_sum                                                  |
|            Total read requests from TCP to all TCCs Sum over TCP instances.  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_WRITE_REQ_sum                                                 |
|            Total write requests from TCP to all TCCs Sum over TCP instances. |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_ATOMIC_WITH_RET_REQ_sum                                       |
|            Total atomic with return requests from TCP to all TCCs Sum over TC|
|            P instances.                                                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_ATOMIC_WITHOUT_RET_REQ_sum                                    |
|            Total atomic without return requests from TCP to all TCCs Sum over|
|             TCP instances.                                                   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_NC_READ_REQ_sum                                               |
|            Total read requests with NC mtype from this TCP to all TCCs Sum ov|
|            er TCP instances.                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_NC_WRITE_REQ_sum                                              |
|            Total write requests with NC mtype from this TCP to all TCCs Sum o|
|            ver TCP instances.                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_NC_ATOMIC_REQ_sum                                             |
|            Total atomic requests with NC mtype from this TCP to all TCCs Sum |
|            over TCP instances.                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_UC_READ_REQ_sum                                               |
|            Total read requests with UC mtype from this TCP to all TCCs Sum ov|
|            er TCP instances.                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_UC_WRITE_REQ_sum                                              |
|            Total write requests with UC mtype from this TCP to all TCCs Sum o|
|            ver TCP instances.                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_UC_ATOMIC_REQ_sum                                             |
|            Total atomic requests with UC mtype from this TCP to all TCCs Sum |
|            over TCP instances.                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_CC_READ_REQ_sum                                               |
|            Total write requests with CC mtype from this TCP to all TCCs Sum o|
|            ver TCP instances.                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_CC_WRITE_REQ_sum                                              |
|            Total write requests with CC mtype from this TCP to all TCCs Sum o|
|            ver TCP instances.                                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_CC_ATOMIC_REQ_sum                                             |
|            Total atomic requests with CC mtype from this TCP to all TCCs Sum |
|            over TCP instances.                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_RW_READ_REQ_sum                                               |
|            Total write requests with RW mtype from this TCP to all TCCs. Sum |
|            over TCP instances.                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_RW_WRITE_REQ_sum                                              |
|            Total write requests with RW mtype from this TCP to all TCCs. Sum |
|            over TCP instances.                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCC_RW_ATOMIC_REQ_sum                                             |
|            Total atomic requests with RW mtype from this TCP to all TCCs. Sum|
|             over TCP instances.                                              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_PENDING_STALL_CYCLES_sum                                          |
|            Stall due to data pending from L2. Sum over TCP instances.        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCR_TCP_STALL_CYCLES_PERCENT                                      |
|            Percentage of time TCP is stalled by TCR.                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCA_CYCLE_sum                                                         |
|            Number of cycles. Sum over all TCA instances                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCA_BUSY_sum                                                          |
|            Number of cycles we have a request pending. Sum over all TCA insta|
|            nces.                                                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_BUSY_avr                                                          |
|            TCC_BUSY avr over all memory channels.                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_WRREQ_STALL_max                                                   |
|            Number of cycles a write request was stalled. Max over TCC instanc|
|            es.                                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_CYCLE_sum                                                         |
|            Number of cycles. Not windowable. Sum over TCC instances.         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_BUSY_sum                                                          |
|            Number of cycles we have a request pending. Not windowable. Sum ov|
|            er TCC instances.                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_REQ_sum                                                           |
|            Number of requests of all types. This is measured at the tag block|
|            . This may be more than the number of requests arriving at the TCC|
|            , but it is a good indication of the total amount of work that nee|
|            ds to be performed. Sum over TCC instances.                       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_STREAMING_REQ_sum                                                 |
|            Number of streaming requests. This is measured at the tag block. S|
|            um over TCC instances.                                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_NC_REQ_sum                                                        |
|            The number of noncoherently cached requests. This is measured at t|
|            he tag block. Sum over TCC instances.                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_UC_REQ_sum                                                        |
|            The number of uncached requests. This is measured at the tag block|
|            . Sum over TCC instances.                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_CC_REQ_sum                                                        |
|            The number of coherently cached requests. This is measured at the |
|            tag block. Sum over TCC instances.                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_RW_REQ_sum                                                        |
|            The number of RW requests. This is measured at the tag block. Sum |
|            over TCC instances.                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_PROBE_sum                                                         |
|            Number of probe requests. Not windowable. Sum over TCC instances. |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_PROBE_ALL_sum                                                     |
|            Number of external probe requests with with EA_TCC_preq_all== 1. N|
|            ot windowable. Sum over TCC instances.                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_READ_sum                                                          |
|            Number of read requests. Compressed reads are included in this, bu|
|            t metadata reads are not included. Sum over TCC instances.        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_WRITE_sum                                                         |
|            Number of write requests. Sum over TCC instances.                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_ATOMIC_sum                                                        |
|            Number of atomic requests of all types. Sum over TCC instances.   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_HIT_sum                                                           |
|            Number of cache hits. Sum over TCC instances.                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_MISS_sum                                                          |
|            Number of cache misses. UC reads count as misses. Sum over TCC ins|
|            tances.                                                           |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_WRITEBACK_sum                                                     |
|            Number of lines written back to main memory. This includes writeba|
|            cks of dirty lines and uncached write/atomic requests. Sum over TC|
|            C instances.                                                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WRREQ_sum                                                      |
|            Number of transactions (either 32-byte or 64-byte) going over the |
|            TC_EA_wrreq interface. Atomics may travel over the same interface |
|            and are generally classified as write requests. This does not incl|
|            ude probe commands. Sum over TCC instances.                       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WRREQ_64B_sum                                                  |
|            Number of 64-byte transactions going (64-byte write or CMPSWAP) ov|
|            er the TC_EA_wrreq interface. Sum over TCC instances.             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WR_UNCACHED_32B_sum                                            |
|            Number of 32-byte write/atomic going over the TC_EA_wrreq interfac|
|            e due to uncached traffic. Note that CC mtypes can produce uncache|
|            d requests, and those are included in this. A 64-byte request will|
|             be counted as 2. Sum over TCC instances.                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WRREQ_STALL_sum                                                |
|            Number of cycles a write request was stalled. Sum over TCC instanc|
|            es.                                                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WRREQ_IO_CREDIT_STALL_sum                                      |
|            Number of cycles a EA write request was stalled because the interf|
|            ace was out of IO credits. Sum over TCC instances.                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WRREQ_GMI_CREDIT_STALL_sum                                     |
|            Number of cycles a EA write request was stalled because the interf|
|            ace was out of GMI credits. Sum over TCC instances.               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WRREQ_DRAM_CREDIT_STALL_sum                                    |
|            Number of cycles a EA write request was stalled because the interf|
|            ace was out of DRAM credits. Sum over TCC instances.              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_TOO_MANY_EA_WRREQS_STALL_sum                                      |
|            Number of cycles the TCC could not send a EA write request because|
|             it already reached its maximum number of pending EA write request|
|            s. Sum over TCC instances.                                        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WRREQ_LEVEL_sum                                                |
|            The sum of the number of EA write requests in flight. This is prim|
|            arily meant for measure average EA write latency. Average write la|
|            tency = TCC_PERF_SEL_EA_WRREQ_LEVEL/TCC_PERF_SEL_EA_WRREQ. Sum ove|
|            r TCC instances.                                                  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_RDREQ_LEVEL_sum                                                |
|            The sum of the number of TCC/EA read requests in flight. This is p|
|            rimarily meant for measure average EA read latency. Average read l|
|            atency = TCC_PERF_SEL_EA_RDREQ_LEVEL/TCC_PERF_SEL_EA_RDREQ. Sum ov|
|            er TCC instances.                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_ATOMIC_sum                                                     |
|            Number of transactions going over the TC_EA_wrreq interface that a|
|            re actually atomic requests. Sum over TCC instances.              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_ATOMIC_LEVEL_sum                                               |
|            The sum of the number of EA atomics in flight. This is primarily m|
|            eant for measure average EA atomic latency. Average atomic latency|
|             = TCC_PERF_SEL_EA_WRREQ_ATOMIC_LEVEL/TCC_PERF_SEL_EA_WRREQ_ATOMIC|
|            . Sum over TCC instances.                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_RDREQ_sum                                                      |
|            Number of TCC/EA read requests (either 32-byte or 64-byte) Sum ove|
|            r TCC instances.                                                  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_RDREQ_32B_sum                                                  |
|            Number of 32-byte TCC/EA read requests Sum over TCC instances.    |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_RD_UNCACHED_32B_sum                                            |
|            Number of 32-byte TCC/EA read due to uncached traffic. A 64-byte r|
|            equest will be counted as 2 Sum over TCC instances.               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_RDREQ_IO_CREDIT_STALL_sum                                      |
|            Number of cycles there was a stall because the read request interf|
|            ace was out of IO credits. Stalls occur regardless of whether a re|
|            ad needed to be performed or not. Sum over TCC instances.         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_RDREQ_GMI_CREDIT_STALL_sum                                     |
|            Number of cycles there was a stall because the read request interf|
|            ace was out of GMI credits. Stalls occur regardless of whether a r|
|            ead needed to be performed or not. Sum over TCC instances.        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_RDREQ_DRAM_CREDIT_STALL_sum                                    |
|            Number of cycles there was a stall because the read request interf|
|            ace was out of DRAM credits. Stalls occur regardless of whether a |
|            read needed to be performed or not. Sum over TCC instances.       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_TAG_STALL_sum                                                     |
|            .                                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_TAG_STALL_PERCENT                                                 |
|            Percentage of time the TCC tag lookup pipeline is stalled.        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_NORMAL_WRITEBACK_sum                                              |
|            Number of writebacks due to requests that are not writeback reques|
|            ts. Sum over TCC instances.                                       |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_ALL_TC_OP_WB_WRITEBACK_sum                                        |
|            Number of writebacks due to all TC_OP writeback requests. Sum over|
|             TCC instances.                                                   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_NORMAL_EVICT_sum                                                  |
|            Number of evictions due to requests that are not invalidate or pro|
|            be requests. Sum over TCC instances.                              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_ALL_TC_OP_INV_EVICT_sum                                           |
|            Number of evictions due to all TC_OP invalidate requests. Sum over|
|             TCC instances.                                                   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_RDREQ_DRAM_sum                                                 |
|            Number of TCC/EA read requests (either 32-byte or 64-byte) destine|
|            d for DRAM (MC). Sum over TCC instances.                          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCC_EA_WRREQ_DRAM_sum                                                 |
|            Number of TCC/EA write requests (either 32-byte of 64-byte) destin|
|            ed for DRAM (MC). Sum over TCC instances.                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::FETCH_SIZE                                                            |
|            The total kilobytes fetched from the video memory. This is measure|
|            d with all extra fetches and any cache or memory effects taken int|
|            o account.                                                        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::WRITE_SIZE                                                            |
|            The total kilobytes written to the video memory. This is measured |
|            with all extra fetches and any cache or memory effects taken into |
|            account.                                                          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TOTAL_16_OPS                                                          |
|            The number of 16 bits OPS executed                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TOTAL_32_OPS                                                          |
|            The number of 32 bits OPS executed                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TOTAL_64_OPS                                                          |
|            The number of 64 bits OPS executed                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::ACTIVE_CYCLES                                                         |
|            Active Cycles                                                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::ELAPSED_CYCLES                                                        |
|            Elapsed Cycles                                                    |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::ACTIVE_WAVES                                                          |
|            Active Waves                                                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::BANDWIDTH_EA                                                          |
|            Memory Bandwidth measured at the TCC_EA interface. In units of byt|
|            es/cycle.                                                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::OccupancyPercent                                                      |
|            GPU occupancy as % of maximum.                                    |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::MfmaUtil                                                              |
|            The percentage of kernel's duration, the MFMA unit was busy execut|
|            ing instructions                                                  |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_BUSY_avr                                                           |
|            TA block is busy. Average over TA instances.                      |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_BUSY_max                                                           |
|            TA block is busy. Max over TA instances.                          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_BUSY_min                                                           |
|            TA block is busy. Min over TA instances.                          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TA_FLAT_WRITE_WAVEFRONTS_sum                                          |
|            Number of flat opcode writes processed by the TA. Sum over TA inst|
|            ances.                                                            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCP_TA_DATA_STALL_CYCLES_sum                                      |
|            Total number of TCP stalls TA data interface.                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::TCP_TCP_TA_DATA_STALL_CYCLES_max                                      |
|            Maximum number of TCP stalls TA data interface.                   |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::WRITE_REQ_32B                                                         |
|            The total number of 32-byte effective memory writes.              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::VFetchInsts                                                           |
|            The average number of vector fetch instructions from the video mem|
|            ory executed per work-item (affected by flow control). Excludes FL|
|            AT instructions that fetch from video memory.                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::VWriteInsts                                                           |
|            The average number of vector write instructions to the video memor|
|            y executed per work-item (affected by flow control). Excludes FLAT|
|             instructions that write to video memory.                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::FlatVMemInsts                                                         |
|            The average number of FLAT instructions that read from or write to|
|             the video memory executed per work item (affected by flow control|
|            ). Includes FLAT instructions that read from or write to scratch. |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::LDSInsts                                                              |
|            The average number of LDS read or LDS write instructions executed |
|            per work item (affected by flow control).  Excludes FLAT instructi|
|            ons that read from or write to LDS.                               |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::FlatLDSInsts                                                          |
|            The average number of FLAT instructions that read or write to LDS |
|            executed per work item (affected by flow control).                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::VALUUtilization                                                       |
|            The percentage of active vector ALU threads in a wave. A lower num|
|            ber can mean either more thread divergence in a wave or that the w|
|            ork-group size is not a multiple of 64. Value range: 0% (bad), 100|
|            % (ideal - no thread divergence).                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::VALUBusy                                                              |
|            The percentage of GPUTime vector ALU instructions are processed. V|
|            alue range: 0% (bad) to 100% (optimal).                           |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SALUBusy                                                              |
|            The percentage of GPUTime scalar ALU instructions are processed. V|
|            alue range: 0% (bad) to 100% (optimal).                           |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::FetchSize                                                             |
|            The total kilobytes fetched from the video memory. This is measure|
|            d with all extra fetches and any cache or memory effects taken int|
|            o account.                                                        |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::WriteSize                                                             |
|            The total kilobytes written to the video memory. This is measured |
|            with all extra fetches and any cache or memory effects taken into |
|            account.                                                          |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::MemWrites32B                                                          |
|            The total number of effective 32B write transactions to the memory|
|                                                                              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::L2CacheHit                                                            |
|            The percentage of fetch, write, atomic, and other instructions tha|
|            t hit the data in L2 cache. Value range: 0% (no hit) to 100% (opti|
|            mal).                                                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::MemUnitStalled                                                        |
|            The percentage of GPUTime the memory unit is stalled. Try reducing|
|             the number or size of fetches and writes if possible. Value range|
|            : 0% (optimal) to 100% (bad).                                     |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::WriteUnitStalled                                                      |
|            The percentage of GPUTime the Write unit is stalled. Value range: |
|            0% to 100% (bad).                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::LDSBankConflict                                                       |
|            The percentage of GPUTime LDS is stalled by bank conflicts. Value |
|            range: 0% (optimal) to 100% (bad).                                |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::GPUBusy                                                               |
|            The percentage of time GPU was busy.                              |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::Wavefronts                                                            |
|            Total wavefronts.                                                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::VALUInsts                                                             |
|            The average number of vector ALU instructions executed per work-it|
|            em (affected by flow control).                                    |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SALUInsts                                                             |
|            The average number of scalar ALU instructions executed per work-it|
|            em (affected by flow control).                                    |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::SFetchInsts                                                           |
|            The average number of scalar fetch instructions from the video mem|
|            ory executed per work-item (affected by flow control).            |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::GDSInsts                                                              |
|            The average number of GDS read or GDS write instructions executed |
|            per work item (affected by flow control).                         |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::MemUnitBusy                                                           |
|            The percentage of GPUTime the memory unit is active. The result in|
|            cludes the stall time (MemUnitStalled). This is measured with all |
|            extra fetches and writes and any cache or memory effects taken int|
|            o account. Value range: 0% to 100% (fetch-bound).                 |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
--------------------------------------------------------------------------------
| rocm:::ALUStalledByLDS                                                       |
|            The percentage of GPUTime ALU units are stalled by the LDS input q|
|            ueue being full or the output queue being not ready. If there are |
|            LDS bank conflicts, reduce them. Otherwise, try reducing the numbe|
|            r of LDS accesses if possible. Value range: 0% (optimal) to 100% (|
|            bad).                                                             |
|     :device=0                                                                |
|            Mandatory device qualifier [0,1]                                  |
===============================================================================
 Native Events in Component: rocm_smi
===============================================================================
| rocm_smi:::NUMDevices                                                        |
|            Number of Devices which have monitors, accessible by rocm_smi.    |
--------------------------------------------------------------------------------
| rocm_smi:::rsmi_version                                                      |
|            Version of RSMI lib; 0x0000MMMMmmmmpppp Major, Minor, Patch.      |
--------------------------------------------------------------------------------
| rocm_smi:::driver_version_str                                                |
|            Returns char* to z-terminated driver version string; do not free()|
|            .                                                                 |
--------------------------------------------------------------------------------
| rocm_smi:::device_brand:device=0                                             |
|            Returns char* to z-terminated brand string; do not free().        |
--------------------------------------------------------------------------------
| rocm_smi:::busy_percent:device=0                                             |
|            Percentage of time the device was busy doing any processing.      |
--------------------------------------------------------------------------------
| rocm_smi:::drm_render_minor:device=0                                         |
|            DRM Minor Number associated with this device.                     |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_correctable:device=0:block=UMC                          |
|            Correctable error count for the GPU Block UMC.                    |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_uncorrectable:device=0:block=UMC                        |
|            Uncorrectable error count for the GPU Block UMC.                  |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_correctable:device=0:block=SDMA                         |
|            Correctable error count for the GPU Block SDMA.                   |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_uncorrectable:device=0:block=SDMA                       |
|            Uncorrectable error count for the GPU Block SDMA.                 |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_correctable:device=0:block=GFX                          |
|            Correctable error count for the GPU Block GFX.                    |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_uncorrectable:device=0:block=GFX                        |
|            Uncorrectable error count for the GPU Block GFX.                  |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_correctable:device=0:block=MMHUB                        |
|            Correctable error count for the GPU Block MMHUB.                  |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_uncorrectable:device=0:block=MMHUB                      |
|            Uncorrectable error count for the GPU Block MMHUB.                |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_correctable:device=0:block=PCIE_BIF                     |
|            Correctable error count for the GPU Block PCIE_BIF.               |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_uncorrectable:device=0:block=PCIE_BIF                   |
|            Uncorrectable error count for the GPU Block PCIE_BIF.             |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_correctable:device=0:block=HDP                          |
|            Correctable error count for the GPU Block HDP.                    |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_uncorrectable:device=0:block=HDP                        |
|            Uncorrectable error count for the GPU Block HDP.                  |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_enabled_get:device=0                                          |
|            Bit mask of GPU blocks with ecc error counting enabled.           |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=0:block=MEC                               |
|            Firmware Version Block MEC.                                       |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=0:block=MEC2                              |
|            Firmware Version Block MEC2.                                      |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=0:block=RLC                               |
|            Firmware Version Block RLC.                                       |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=0:block=SDMA                              |
|            Firmware Version Block SDMA.                                      |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=0:block=SDMA2                             |
|            Firmware Version Block SDMA2.                                     |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=0:block=SMC                               |
|            Firmware Version Block SMC.                                       |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=0:block=SOS                               |
|            Firmware Version Block SOS.                                       |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=0:block=RAS                               |
|            Firmware Version Block RAS.                                       |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=0:block=XGMI                              |
|            Firmware Version Block XGMI.                                      |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=0:block=VCN                               |
|            Firmware Version Block VCN.                                       |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_System:device=0:count                                |
|            Number of frequencies available.                                  |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_System:device=0:current                              |
|            Current operating frequency.                                      |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_System:device=0:idx=0                                |
|            Returns System frequency value for supported_table[0].            |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_System:device=0:idx=1                                |
|            Returns System frequency value for supported_table[1].            |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_System:device=0:idx=2                                |
|            Returns System frequency value for supported_table[2].            |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_DataFabric:device=0:count                            |
|            Number of frequencies available.                                  |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_DataFabric:device=0:current                          |
|            Current operating frequency.                                      |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_DataFabric:device=0:idx=0                            |
|            Returns DataFabric frequency value for supported_table[0].        |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_SOC:device=0:count                                   |
|            Number of frequencies available.                                  |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_SOC:device=0:current                                 |
|            Current operating frequency.                                      |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_SOC:device=0:idx=0                                   |
|            Returns SOC frequency value for supported_table[0].               |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_SOC:device=0:idx=1                                   |
|            Returns SOC frequency value for supported_table[1].               |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_SOC:device=0:idx=2                                   |
|            Returns SOC frequency value for supported_table[2].               |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_SOC:device=0:idx=3                                   |
|            Returns SOC frequency value for supported_table[3].               |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_SOC:device=0:idx=4                                   |
|            Returns SOC frequency value for supported_table[4].               |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_Memory:device=0:count                                |
|            Number of frequencies available.                                  |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_Memory:device=0:current                              |
|            Current operating frequency.                                      |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_Memory:device=0:idx=0                                |
|            Returns Memory frequency value for supported_table[0].            |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_Memory:device=0:idx=1                                |
|            Returns Memory frequency value for supported_table[1].            |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_Memory:device=0:idx=2                                |
|            Returns Memory frequency value for supported_table[2].            |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_Memory:device=0:idx=3                                |
|            Returns Memory frequency value for supported_table[3].            |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_System:device=0:mask                                 |
|            Write Only. Sets bit mask, 1's for System frequency value in suppo|
|            rt table permitted. All 0 mask prohibited.                        |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_DataFabric:device=0:mask                             |
|            Write Only. Sets bit mask, 1's for DataFabric frequency value in s|
|            upport table permitted. All 0 mask prohibited.                    |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_SOC:device=0:mask                                    |
|            Write Only. Sets bit mask, 1's for SOC frequency value in support |
|            table permitted. All 0 mask prohibited.                           |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_Memory:device=0:mask                                 |
|            Write Only. Sets bit mask, 1's for Memory frequency value in suppo|
|            rt table permitted. All 0 mask prohibited.                        |
--------------------------------------------------------------------------------
| rocm_smi:::device_id:device=0                                                |
|            Vendor supplied device id number. May be shared by same model devi|
|            ces; see pci_id for a unique identifier.                          |
--------------------------------------------------------------------------------
| rocm_smi:::memory_busy_percent:device=0                                      |
|            Percentage_of time any device memory is being used.               |
--------------------------------------------------------------------------------
| rocm_smi:::mem_total_VRAM:device=0                                           |
|            Total VRAM memory.                                                |
--------------------------------------------------------------------------------
| rocm_smi:::mem_total_VIS_VRAM:device=0                                       |
|            Total Visible VRAM memory.                                        |
--------------------------------------------------------------------------------
| rocm_smi:::mem_total_GTT:device=0                                            |
|            Total Visible GTT (Graphics Translation Table) memory, aka GART me|
|            mory.                                                             |
--------------------------------------------------------------------------------
| rocm_smi:::mem_usage_VRAM:device=0                                           |
|            VRAM memory in use.                                               |
--------------------------------------------------------------------------------
| rocm_smi:::mem_usage_VIS_VRAM:device=0                                       |
|            Visible VRAM memory in use.                                       |
--------------------------------------------------------------------------------
| rocm_smi:::mem_usage_GTT:device=0                                            |
|            (Graphic Translation Table) memory in use (aka GART memory).      |
--------------------------------------------------------------------------------
| rocm_smi:::device_name:device=0                                              |
|            Returns char* to z-terminated name string; do not free().         |
--------------------------------------------------------------------------------
| rocm_smi:::pci_id:device=0                                                   |
|            BDF (Bus/Device/Function) ID, unique per device.                  |
--------------------------------------------------------------------------------
| rocm_smi:::pci_replay_counter:device=0                                       |
|            Sum of the number of NAK's received by the GPU and the NAK's gener|
|            ated by the GPU.                                                  |
--------------------------------------------------------------------------------
| rocm_smi:::pci_throughput_sent:device=0                                      |
|            Throughput on PCIe traffic, bytes/second sent.                    |
--------------------------------------------------------------------------------
| rocm_smi:::pci_throughput_received:device=0                                  |
|            Throughput on PCIe traffic, bytes/second received.                |
--------------------------------------------------------------------------------
| rocm_smi:::pci_max_packet_size:device=0                                      |
|            Maximum PCIe packet size.                                         |
--------------------------------------------------------------------------------
| rocm_smi:::perf_level:device=0                                               |
|            PowerPlay Performance Level; Read/Write, enum rsmi_dev_perf_level_|
|            t [0-8], see ROCm_SMI_Manual for details.                         |
--------------------------------------------------------------------------------
| rocm_smi:::power_average:device=0:sensor=0                                   |
|            Current Average Power consumption in microwatts. Requires root pri|
|            vileges.                                                          |
--------------------------------------------------------------------------------
| rocm_smi:::power_cap:device=0:sensor=0                                       |
|            Power cap in microwatts. Read/Write. Between min/max (see power_ca|
|            p_range_min/max). May require root privileges.                    |
--------------------------------------------------------------------------------
| rocm_smi:::power_cap_range_min:device=0:sensor=0                             |
|            Power cap Minimum settable value, in microwatts.                  |
--------------------------------------------------------------------------------
| rocm_smi:::power_cap_range_max:device=0:sensor=0                             |
|            Power cap Maximim settable value, in microwatts.                  |
--------------------------------------------------------------------------------
| rocm_smi:::device_serial_number:device=0                                     |
|            Returns char* to z-terminated serial number string; do not free().|
|                                                                              |
--------------------------------------------------------------------------------
| rocm_smi:::subsystem_id:device=0                                             |
|            Subsystem id number.                                              |
--------------------------------------------------------------------------------
| rocm_smi:::device_subsystem_name:device=0                                    |
|            Returns char* to z-terminated subsystem name string; do not free()|
|            .                                                                 |
--------------------------------------------------------------------------------
| rocm_smi:::subsystem_vendor_id:device=0                                      |
|            System vendor id number.                                          |
--------------------------------------------------------------------------------
| rocm_smi:::temp_current:device=0:sensor=0                                    |
|            Temperature current value, millidegrees Celsius.                  |
--------------------------------------------------------------------------------
| rocm_smi:::temp_current:device=0:sensor=1                                    |
|            Temperature current value, millidegrees Celsius.                  |
--------------------------------------------------------------------------------
| rocm_smi:::temp_current:device=0:sensor=2                                    |
|            Temperature current value, millidegrees Celsius.                  |
--------------------------------------------------------------------------------
| rocm_smi:::temp_critical:device=0:sensor=0                                   |
|            Temperature critical max value, typical > temp_max, millidegrees C|
|            elsius.                                                           |
--------------------------------------------------------------------------------
| rocm_smi:::temp_critical:device=0:sensor=1                                   |
|            Temperature critical max value, typical > temp_max, millidegrees C|
|            elsius.                                                           |
--------------------------------------------------------------------------------
| rocm_smi:::temp_critical:device=0:sensor=2                                   |
|            Temperature critical max value, typical > temp_max, millidegrees C|
|            elsius.                                                           |
--------------------------------------------------------------------------------
| rocm_smi:::temp_critical_hyst:device=0:sensor=0                              |
|            Temperature hysteresis value for critical limit, millidegrees Cels|
|            ius.                                                              |
--------------------------------------------------------------------------------
| rocm_smi:::temp_critical_hyst:device=0:sensor=1                              |
|            Temperature hysteresis value for critical limit, millidegrees Cels|
|            ius.                                                              |
--------------------------------------------------------------------------------
| rocm_smi:::temp_critical_hyst:device=0:sensor=2                              |
|            Temperature hysteresis value for critical limit, millidegrees Cels|
|            ius.                                                              |
--------------------------------------------------------------------------------
| rocm_smi:::temp_emergency:device=0:sensor=0                                  |
|            Temperature emergency max for chips supporting more than two upper|
|             temp limits, millidegrees Celsius.                               |
--------------------------------------------------------------------------------
| rocm_smi:::temp_emergency:device=0:sensor=1                                  |
|            Temperature emergency max for chips supporting more than two upper|
|             temp limits, millidegrees Celsius.                               |
--------------------------------------------------------------------------------
| rocm_smi:::temp_emergency:device=0:sensor=2                                  |
|            Temperature emergency max for chips supporting more than two upper|
|             temp limits, millidegrees Celsius.                               |
--------------------------------------------------------------------------------
| rocm_smi:::unique_id:device=0                                                |
|            Unique id for device.                                             |
--------------------------------------------------------------------------------
| rocm_smi:::vbios_version:device=0                                            |
|            Returns char* to z-terminated vbios version string; do not free().|
|                                                                              |
--------------------------------------------------------------------------------
| rocm_smi:::vendor_id:device=0                                                |
|            Vendor id number.                                                 |
--------------------------------------------------------------------------------
| rocm_smi:::vendor_name:device=0                                              |
|            Returns char* to z-terminated vendor name string; do not free().  |
--------------------------------------------------------------------------------
| rocm_smi:::device_brand:device=1                                             |
|            Returns char* to z-terminated brand string; do not free().        |
--------------------------------------------------------------------------------
| rocm_smi:::busy_percent:device=1                                             |
|            Percentage of time the device was busy doing any processing.      |
--------------------------------------------------------------------------------
| rocm_smi:::drm_render_minor:device=1                                         |
|            DRM Minor Number associated with this device.                     |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_correctable:device=1:block=UMC                          |
|            Correctable error count for the GPU Block UMC.                    |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_uncorrectable:device=1:block=UMC                        |
|            Uncorrectable error count for the GPU Block UMC.                  |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_correctable:device=1:block=SDMA                         |
|            Correctable error count for the GPU Block SDMA.                   |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_uncorrectable:device=1:block=SDMA                       |
|            Uncorrectable error count for the GPU Block SDMA.                 |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_correctable:device=1:block=GFX                          |
|            Correctable error count for the GPU Block GFX.                    |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_uncorrectable:device=1:block=GFX                        |
|            Uncorrectable error count for the GPU Block GFX.                  |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_correctable:device=1:block=MMHUB                        |
|            Correctable error count for the GPU Block MMHUB.                  |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_uncorrectable:device=1:block=MMHUB                      |
|            Uncorrectable error count for the GPU Block MMHUB.                |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_correctable:device=1:block=PCIE_BIF                     |
|            Correctable error count for the GPU Block PCIE_BIF.               |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_uncorrectable:device=1:block=PCIE_BIF                   |
|            Uncorrectable error count for the GPU Block PCIE_BIF.             |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_correctable:device=1:block=HDP                          |
|            Correctable error count for the GPU Block HDP.                    |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_count_uncorrectable:device=1:block=HDP                        |
|            Uncorrectable error count for the GPU Block HDP.                  |
--------------------------------------------------------------------------------
| rocm_smi:::ecc_enabled_get:device=1                                          |
|            Bit mask of GPU blocks with ecc error counting enabled.           |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=1:block=MEC                               |
|            Firmware Version Block MEC.                                       |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=1:block=MEC2                              |
|            Firmware Version Block MEC2.                                      |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=1:block=RLC                               |
|            Firmware Version Block RLC.                                       |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=1:block=SDMA                              |
|            Firmware Version Block SDMA.                                      |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=1:block=SDMA2                             |
|            Firmware Version Block SDMA2.                                     |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=1:block=SMC                               |
|            Firmware Version Block SMC.                                       |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=1:block=SOS                               |
|            Firmware Version Block SOS.                                       |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=1:block=RAS                               |
|            Firmware Version Block RAS.                                       |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=1:block=XGMI                              |
|            Firmware Version Block XGMI.                                      |
--------------------------------------------------------------------------------
| rocm_smi:::firmware_version:device=1:block=VCN                               |
|            Firmware Version Block VCN.                                       |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_System:device=1:count                                |
|            Number of frequencies available.                                  |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_System:device=1:current                              |
|            Current operating frequency.                                      |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_System:device=1:idx=0                                |
|            Returns System frequency value for supported_table[0].            |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_System:device=1:idx=1                                |
|            Returns System frequency value for supported_table[1].            |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_System:device=1:idx=2                                |
|            Returns System frequency value for supported_table[2].            |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_DataFabric:device=1:count                            |
|            Number of frequencies available.                                  |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_DataFabric:device=1:current                          |
|            Current operating frequency.                                      |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_DataFabric:device=1:idx=0                            |
|            Returns DataFabric frequency value for supported_table[0].        |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_SOC:device=1:count                                   |
|            Number of frequencies available.                                  |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_SOC:device=1:current                                 |
|            Current operating frequency.                                      |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_SOC:device=1:idx=0                                   |
|            Returns SOC frequency value for supported_table[0].               |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_SOC:device=1:idx=1                                   |
|            Returns SOC frequency value for supported_table[1].               |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_SOC:device=1:idx=2                                   |
|            Returns SOC frequency value for supported_table[2].               |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_SOC:device=1:idx=3                                   |
|            Returns SOC frequency value for supported_table[3].               |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_SOC:device=1:idx=4                                   |
|            Returns SOC frequency value for supported_table[4].               |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_Memory:device=1:count                                |
|            Number of frequencies available.                                  |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_Memory:device=1:current                              |
|            Current operating frequency.                                      |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_Memory:device=1:idx=0                                |
|            Returns Memory frequency value for supported_table[0].            |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_Memory:device=1:idx=1                                |
|            Returns Memory frequency value for supported_table[1].            |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_Memory:device=1:idx=2                                |
|            Returns Memory frequency value for supported_table[2].            |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_Memory:device=1:idx=3                                |
|            Returns Memory frequency value for supported_table[3].            |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_System:device=1:mask                                 |
|            Write Only. Sets bit mask, 1's for System frequency value in suppo|
|            rt table permitted. All 0 mask prohibited.                        |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_DataFabric:device=1:mask                             |
|            Write Only. Sets bit mask, 1's for DataFabric frequency value in s|
|            upport table permitted. All 0 mask prohibited.                    |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_SOC:device=1:mask                                    |
|            Write Only. Sets bit mask, 1's for SOC frequency value in support |
|            table permitted. All 0 mask prohibited.                           |
--------------------------------------------------------------------------------
| rocm_smi:::gpu_clk_freq_Memory:device=1:mask                                 |
|            Write Only. Sets bit mask, 1's for Memory frequency value in suppo|
|            rt table permitted. All 0 mask prohibited.                        |
--------------------------------------------------------------------------------
| rocm_smi:::device_id:device=1                                                |
|            Vendor supplied device id number. May be shared by same model devi|
|            ces; see pci_id for a unique identifier.                          |
--------------------------------------------------------------------------------
| rocm_smi:::memory_busy_percent:device=1                                      |
|            Percentage_of time any device memory is being used.               |
--------------------------------------------------------------------------------
| rocm_smi:::mem_total_VRAM:device=1                                           |
|            Total VRAM memory.                                                |
--------------------------------------------------------------------------------
| rocm_smi:::mem_total_VIS_VRAM:device=1                                       |
|            Total Visible VRAM memory.                                        |
--------------------------------------------------------------------------------
| rocm_smi:::mem_total_GTT:device=1                                            |
|            Total Visible GTT (Graphics Translation Table) memory, aka GART me|
|            mory.                                                             |
--------------------------------------------------------------------------------
| rocm_smi:::mem_usage_VRAM:device=1                                           |
|            VRAM memory in use.                                               |
--------------------------------------------------------------------------------
| rocm_smi:::mem_usage_VIS_VRAM:device=1                                       |
|            Visible VRAM memory in use.                                       |
--------------------------------------------------------------------------------
| rocm_smi:::mem_usage_GTT:device=1                                            |
|            (Graphic Translation Table) memory in use (aka GART memory).      |
--------------------------------------------------------------------------------
| rocm_smi:::device_name:device=1                                              |
|            Returns char* to z-terminated name string; do not free().         |
--------------------------------------------------------------------------------
| rocm_smi:::pci_id:device=1                                                   |
|            BDF (Bus/Device/Function) ID, unique per device.                  |
--------------------------------------------------------------------------------
| rocm_smi:::pci_replay_counter:device=1                                       |
|            Sum of the number of NAK's received by the GPU and the NAK's gener|
|            ated by the GPU.                                                  |
--------------------------------------------------------------------------------
| rocm_smi:::pci_throughput_sent:device=1                                      |
|            Throughput on PCIe traffic, bytes/second sent.                    |
--------------------------------------------------------------------------------
| rocm_smi:::pci_throughput_received:device=1                                  |
|            Throughput on PCIe traffic, bytes/second received.                |
--------------------------------------------------------------------------------
| rocm_smi:::pci_max_packet_size:device=1                                      |
|            Maximum PCIe packet size.                                         |
--------------------------------------------------------------------------------
| rocm_smi:::perf_level:device=1                                               |
|            PowerPlay Performance Level; Read/Write, enum rsmi_dev_perf_level_|
|            t [0-8], see ROCm_SMI_Manual for details.                         |
--------------------------------------------------------------------------------
| rocm_smi:::power_average:device=1:sensor=0                                   |
|            Current Average Power consumption in microwatts. Requires root pri|
|            vileges.                                                          |
--------------------------------------------------------------------------------
| rocm_smi:::power_cap:device=1:sensor=0                                       |
|            Power cap in microwatts. Read/Write. Between min/max (see power_ca|
|            p_range_min/max). May require root privileges.                    |
--------------------------------------------------------------------------------
| rocm_smi:::power_cap_range_min:device=1:sensor=0                             |
|            Power cap Minimum settable value, in microwatts.                  |
--------------------------------------------------------------------------------
| rocm_smi:::power_cap_range_max:device=1:sensor=0                             |
|            Power cap Maximim settable value, in microwatts.                  |
--------------------------------------------------------------------------------
| rocm_smi:::device_serial_number:device=1                                     |
|            Returns char* to z-terminated serial number string; do not free().|
|                                                                              |
--------------------------------------------------------------------------------
| rocm_smi:::subsystem_id:device=1                                             |
|            Subsystem id number.                                              |
--------------------------------------------------------------------------------
| rocm_smi:::device_subsystem_name:device=1                                    |
|            Returns char* to z-terminated subsystem name string; do not free()|
|            .                                                                 |
--------------------------------------------------------------------------------
| rocm_smi:::subsystem_vendor_id:device=1                                      |
|            System vendor id number.                                          |
--------------------------------------------------------------------------------
| rocm_smi:::temp_current:device=1:sensor=0                                    |
|            Temperature current value, millidegrees Celsius.                  |
--------------------------------------------------------------------------------
| rocm_smi:::temp_current:device=1:sensor=1                                    |
|            Temperature current value, millidegrees Celsius.                  |
--------------------------------------------------------------------------------
| rocm_smi:::temp_current:device=1:sensor=2                                    |
|            Temperature current value, millidegrees Celsius.                  |
--------------------------------------------------------------------------------
| rocm_smi:::temp_critical:device=1:sensor=0                                   |
|            Temperature critical max value, typical > temp_max, millidegrees C|
|            elsius.                                                           |
--------------------------------------------------------------------------------
| rocm_smi:::temp_critical:device=1:sensor=1                                   |
|            Temperature critical max value, typical > temp_max, millidegrees C|
|            elsius.                                                           |
--------------------------------------------------------------------------------
| rocm_smi:::temp_critical:device=1:sensor=2                                   |
|            Temperature critical max value, typical > temp_max, millidegrees C|
|            elsius.                                                           |
--------------------------------------------------------------------------------
| rocm_smi:::temp_critical_hyst:device=1:sensor=0                              |
|            Temperature hysteresis value for critical limit, millidegrees Cels|
|            ius.                                                              |
--------------------------------------------------------------------------------
| rocm_smi:::temp_critical_hyst:device=1:sensor=1                              |
|            Temperature hysteresis value for critical limit, millidegrees Cels|
|            ius.                                                              |
--------------------------------------------------------------------------------
| rocm_smi:::temp_critical_hyst:device=1:sensor=2                              |
|            Temperature hysteresis value for critical limit, millidegrees Cels|
|            ius.                                                              |
--------------------------------------------------------------------------------
| rocm_smi:::temp_emergency:device=1:sensor=0                                  |
|            Temperature emergency max for chips supporting more than two upper|
|             temp limits, millidegrees Celsius.                               |
--------------------------------------------------------------------------------
| rocm_smi:::temp_emergency:device=1:sensor=1                                  |
|            Temperature emergency max for chips supporting more than two upper|
|             temp limits, millidegrees Celsius.                               |
--------------------------------------------------------------------------------
| rocm_smi:::temp_emergency:device=1:sensor=2                                  |
|            Temperature emergency max for chips supporting more than two upper|
|             temp limits, millidegrees Celsius.                               |
--------------------------------------------------------------------------------
| rocm_smi:::unique_id:device=1                                                |
|            Unique id for device.                                             |
--------------------------------------------------------------------------------
| rocm_smi:::vbios_version:device=1                                            |
|            Returns char* to z-terminated vbios version string; do not free().|
|                                                                              |
--------------------------------------------------------------------------------
| rocm_smi:::vendor_id:device=1                                                |
|            Vendor id number.                                                 |
--------------------------------------------------------------------------------
| rocm_smi:::vendor_name:device=1                                              |
|            Returns char* to z-terminated vendor name string; do not free().  |
===============================================================================
 Native Events in Component: amd_smi
===============================================================================
| amd_smi:::temp_current:device=0:sensor=0                                     |
|            Device 0 temp_current for sensor 0                                |
--------------------------------------------------------------------------------
| amd_smi:::temp_max:device=0:sensor=0                                         |
|            Device 0 temp_max for sensor 0                                    |
--------------------------------------------------------------------------------
| amd_smi:::temp_min:device=0:sensor=0                                         |
|            Device 0 temp_min for sensor 0                                    |
--------------------------------------------------------------------------------
| amd_smi:::temp_max_hyst:device=0:sensor=0                                    |
|            Device 0 temp_max_hyst for sensor 0                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_min_hyst:device=0:sensor=0                                    |
|            Device 0 temp_min_hyst for sensor 0                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_critical:device=0:sensor=0                                    |
|            Device 0 temp_critical for sensor 0                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_critical_hyst:device=0:sensor=0                               |
|            Device 0 temp_critical_hyst for sensor 0                          |
--------------------------------------------------------------------------------
| amd_smi:::temp_emergency:device=0:sensor=0                                   |
|            Device 0 temp_emergency for sensor 0                              |
--------------------------------------------------------------------------------
| amd_smi:::temp_emergency_hyst:device=0:sensor=0                              |
|            Device 0 temp_emergency_hyst for sensor 0                         |
--------------------------------------------------------------------------------
| amd_smi:::temp_crit_min:device=0:sensor=0                                    |
|            Device 0 temp_crit_min for sensor 0                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_crit_min_hyst:device=0:sensor=0                               |
|            Device 0 temp_crit_min_hyst for sensor 0                          |
--------------------------------------------------------------------------------
| amd_smi:::temp_offset:device=0:sensor=0                                      |
|            Device 0 temp_offset for sensor 0                                 |
--------------------------------------------------------------------------------
| amd_smi:::temp_lowest:device=0:sensor=0                                      |
|            Device 0 temp_lowest for sensor 0                                 |
--------------------------------------------------------------------------------
| amd_smi:::temp_highest:device=0:sensor=0                                     |
|            Device 0 temp_highest for sensor 0                                |
--------------------------------------------------------------------------------
| amd_smi:::temp_current:device=0:sensor=1                                     |
|            Device 0 temp_current for sensor 1                                |
--------------------------------------------------------------------------------
| amd_smi:::temp_max:device=0:sensor=1                                         |
|            Device 0 temp_max for sensor 1                                    |
--------------------------------------------------------------------------------
| amd_smi:::temp_min:device=0:sensor=1                                         |
|            Device 0 temp_min for sensor 1                                    |
--------------------------------------------------------------------------------
| amd_smi:::temp_max_hyst:device=0:sensor=1                                    |
|            Device 0 temp_max_hyst for sensor 1                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_min_hyst:device=0:sensor=1                                    |
|            Device 0 temp_min_hyst for sensor 1                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_critical:device=0:sensor=1                                    |
|            Device 0 temp_critical for sensor 1                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_critical_hyst:device=0:sensor=1                               |
|            Device 0 temp_critical_hyst for sensor 1                          |
--------------------------------------------------------------------------------
| amd_smi:::temp_emergency:device=0:sensor=1                                   |
|            Device 0 temp_emergency for sensor 1                              |
--------------------------------------------------------------------------------
| amd_smi:::temp_emergency_hyst:device=0:sensor=1                              |
|            Device 0 temp_emergency_hyst for sensor 1                         |
--------------------------------------------------------------------------------
| amd_smi:::temp_crit_min:device=0:sensor=1                                    |
|            Device 0 temp_crit_min for sensor 1                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_crit_min_hyst:device=0:sensor=1                               |
|            Device 0 temp_crit_min_hyst for sensor 1                          |
--------------------------------------------------------------------------------
| amd_smi:::temp_offset:device=0:sensor=1                                      |
|            Device 0 temp_offset for sensor 1                                 |
--------------------------------------------------------------------------------
| amd_smi:::temp_lowest:device=0:sensor=1                                      |
|            Device 0 temp_lowest for sensor 1                                 |
--------------------------------------------------------------------------------
| amd_smi:::temp_highest:device=0:sensor=1                                     |
|            Device 0 temp_highest for sensor 1                                |
--------------------------------------------------------------------------------
| amd_smi:::temp_current:device=0:sensor=2                                     |
|            Device 0 temp_current for sensor 2                                |
--------------------------------------------------------------------------------
| amd_smi:::temp_max:device=0:sensor=2                                         |
|            Device 0 temp_max for sensor 2                                    |
--------------------------------------------------------------------------------
| amd_smi:::temp_min:device=0:sensor=2                                         |
|            Device 0 temp_min for sensor 2                                    |
--------------------------------------------------------------------------------
| amd_smi:::temp_max_hyst:device=0:sensor=2                                    |
|            Device 0 temp_max_hyst for sensor 2                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_min_hyst:device=0:sensor=2                                    |
|            Device 0 temp_min_hyst for sensor 2                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_critical:device=0:sensor=2                                    |
|            Device 0 temp_critical for sensor 2                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_critical_hyst:device=0:sensor=2                               |
|            Device 0 temp_critical_hyst for sensor 2                          |
--------------------------------------------------------------------------------
| amd_smi:::temp_emergency:device=0:sensor=2                                   |
|            Device 0 temp_emergency for sensor 2                              |
--------------------------------------------------------------------------------
| amd_smi:::temp_emergency_hyst:device=0:sensor=2                              |
|            Device 0 temp_emergency_hyst for sensor 2                         |
--------------------------------------------------------------------------------
| amd_smi:::temp_crit_min:device=0:sensor=2                                    |
|            Device 0 temp_crit_min for sensor 2                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_crit_min_hyst:device=0:sensor=2                               |
|            Device 0 temp_crit_min_hyst for sensor 2                          |
--------------------------------------------------------------------------------
| amd_smi:::temp_offset:device=0:sensor=2                                      |
|            Device 0 temp_offset for sensor 2                                 |
--------------------------------------------------------------------------------
| amd_smi:::temp_lowest:device=0:sensor=2                                      |
|            Device 0 temp_lowest for sensor 2                                 |
--------------------------------------------------------------------------------
| amd_smi:::temp_highest:device=0:sensor=2                                     |
|            Device 0 temp_highest for sensor 2                                |
--------------------------------------------------------------------------------
| amd_smi:::temp_current:device=0:sensor=7                                     |
|            Device 0 temp_current for sensor 7                                |
--------------------------------------------------------------------------------
| amd_smi:::temp_max:device=0:sensor=7                                         |
|            Device 0 temp_max for sensor 7                                    |
--------------------------------------------------------------------------------
| amd_smi:::temp_min:device=0:sensor=7                                         |
|            Device 0 temp_min for sensor 7                                    |
--------------------------------------------------------------------------------
| amd_smi:::temp_max_hyst:device=0:sensor=7                                    |
|            Device 0 temp_max_hyst for sensor 7                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_min_hyst:device=0:sensor=7                                    |
|            Device 0 temp_min_hyst for sensor 7                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_critical:device=0:sensor=7                                    |
|            Device 0 temp_critical for sensor 7                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_critical_hyst:device=0:sensor=7                               |
|            Device 0 temp_critical_hyst for sensor 7                          |
--------------------------------------------------------------------------------
| amd_smi:::temp_emergency:device=0:sensor=7                                   |
|            Device 0 temp_emergency for sensor 7                              |
--------------------------------------------------------------------------------
| amd_smi:::temp_emergency_hyst:device=0:sensor=7                              |
|            Device 0 temp_emergency_hyst for sensor 7                         |
--------------------------------------------------------------------------------
| amd_smi:::temp_crit_min:device=0:sensor=7                                    |
|            Device 0 temp_crit_min for sensor 7                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_crit_min_hyst:device=0:sensor=7                               |
|            Device 0 temp_crit_min_hyst for sensor 7                          |
--------------------------------------------------------------------------------
| amd_smi:::temp_offset:device=0:sensor=7                                      |
|            Device 0 temp_offset for sensor 7                                 |
--------------------------------------------------------------------------------
| amd_smi:::temp_lowest:device=0:sensor=7                                      |
|            Device 0 temp_lowest for sensor 7                                 |
--------------------------------------------------------------------------------
| amd_smi:::temp_highest:device=0:sensor=7                                     |
|            Device 0 temp_highest for sensor 7                                |
--------------------------------------------------------------------------------
| amd_smi:::temp_current:device=1:sensor=0                                     |
|            Device 1 temp_current for sensor 0                                |
--------------------------------------------------------------------------------
| amd_smi:::temp_max:device=1:sensor=0                                         |
|            Device 1 temp_max for sensor 0                                    |
--------------------------------------------------------------------------------
| amd_smi:::temp_min:device=1:sensor=0                                         |
|            Device 1 temp_min for sensor 0                                    |
--------------------------------------------------------------------------------
| amd_smi:::temp_max_hyst:device=1:sensor=0                                    |
|            Device 1 temp_max_hyst for sensor 0                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_min_hyst:device=1:sensor=0                                    |
|            Device 1 temp_min_hyst for sensor 0                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_critical:device=1:sensor=0                                    |
|            Device 1 temp_critical for sensor 0                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_critical_hyst:device=1:sensor=0                               |
|            Device 1 temp_critical_hyst for sensor 0                          |
--------------------------------------------------------------------------------
| amd_smi:::temp_emergency:device=1:sensor=0                                   |
|            Device 1 temp_emergency for sensor 0                              |
--------------------------------------------------------------------------------
| amd_smi:::temp_emergency_hyst:device=1:sensor=0                              |
|            Device 1 temp_emergency_hyst for sensor 0                         |
--------------------------------------------------------------------------------
| amd_smi:::temp_crit_min:device=1:sensor=0                                    |
|            Device 1 temp_crit_min for sensor 0                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_crit_min_hyst:device=1:sensor=0                               |
|            Device 1 temp_crit_min_hyst for sensor 0                          |
--------------------------------------------------------------------------------
| amd_smi:::temp_offset:device=1:sensor=0                                      |
|            Device 1 temp_offset for sensor 0                                 |
--------------------------------------------------------------------------------
| amd_smi:::temp_lowest:device=1:sensor=0                                      |
|            Device 1 temp_lowest for sensor 0                                 |
--------------------------------------------------------------------------------
| amd_smi:::temp_highest:device=1:sensor=0                                     |
|            Device 1 temp_highest for sensor 0                                |
--------------------------------------------------------------------------------
| amd_smi:::temp_current:device=1:sensor=1                                     |
|            Device 1 temp_current for sensor 1                                |
--------------------------------------------------------------------------------
| amd_smi:::temp_max:device=1:sensor=1                                         |
|            Device 1 temp_max for sensor 1                                    |
--------------------------------------------------------------------------------
| amd_smi:::temp_min:device=1:sensor=1                                         |
|            Device 1 temp_min for sensor 1                                    |
--------------------------------------------------------------------------------
| amd_smi:::temp_max_hyst:device=1:sensor=1                                    |
|            Device 1 temp_max_hyst for sensor 1                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_min_hyst:device=1:sensor=1                                    |
|            Device 1 temp_min_hyst for sensor 1                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_critical:device=1:sensor=1                                    |
|            Device 1 temp_critical for sensor 1                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_critical_hyst:device=1:sensor=1                               |
|            Device 1 temp_critical_hyst for sensor 1                          |
--------------------------------------------------------------------------------
| amd_smi:::temp_emergency:device=1:sensor=1                                   |
|            Device 1 temp_emergency for sensor 1                              |
--------------------------------------------------------------------------------
| amd_smi:::temp_emergency_hyst:device=1:sensor=1                              |
|            Device 1 temp_emergency_hyst for sensor 1                         |
--------------------------------------------------------------------------------
| amd_smi:::temp_crit_min:device=1:sensor=1                                    |
|            Device 1 temp_crit_min for sensor 1                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_crit_min_hyst:device=1:sensor=1                               |
|            Device 1 temp_crit_min_hyst for sensor 1                          |
--------------------------------------------------------------------------------
| amd_smi:::temp_offset:device=1:sensor=1                                      |
|            Device 1 temp_offset for sensor 1                                 |
--------------------------------------------------------------------------------
| amd_smi:::temp_lowest:device=1:sensor=1                                      |
|            Device 1 temp_lowest for sensor 1                                 |
--------------------------------------------------------------------------------
| amd_smi:::temp_highest:device=1:sensor=1                                     |
|            Device 1 temp_highest for sensor 1                                |
--------------------------------------------------------------------------------
| amd_smi:::temp_current:device=1:sensor=2                                     |
|            Device 1 temp_current for sensor 2                                |
--------------------------------------------------------------------------------
| amd_smi:::temp_max:device=1:sensor=2                                         |
|            Device 1 temp_max for sensor 2                                    |
--------------------------------------------------------------------------------
| amd_smi:::temp_min:device=1:sensor=2                                         |
|            Device 1 temp_min for sensor 2                                    |
--------------------------------------------------------------------------------
| amd_smi:::temp_max_hyst:device=1:sensor=2                                    |
|            Device 1 temp_max_hyst for sensor 2                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_min_hyst:device=1:sensor=2                                    |
|            Device 1 temp_min_hyst for sensor 2                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_critical:device=1:sensor=2                                    |
|            Device 1 temp_critical for sensor 2                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_critical_hyst:device=1:sensor=2                               |
|            Device 1 temp_critical_hyst for sensor 2                          |
--------------------------------------------------------------------------------
| amd_smi:::temp_emergency:device=1:sensor=2                                   |
|            Device 1 temp_emergency for sensor 2                              |
--------------------------------------------------------------------------------
| amd_smi:::temp_emergency_hyst:device=1:sensor=2                              |
|            Device 1 temp_emergency_hyst for sensor 2                         |
--------------------------------------------------------------------------------
| amd_smi:::temp_crit_min:device=1:sensor=2                                    |
|            Device 1 temp_crit_min for sensor 2                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_crit_min_hyst:device=1:sensor=2                               |
|            Device 1 temp_crit_min_hyst for sensor 2                          |
--------------------------------------------------------------------------------
| amd_smi:::temp_offset:device=1:sensor=2                                      |
|            Device 1 temp_offset for sensor 2                                 |
--------------------------------------------------------------------------------
| amd_smi:::temp_lowest:device=1:sensor=2                                      |
|            Device 1 temp_lowest for sensor 2                                 |
--------------------------------------------------------------------------------
| amd_smi:::temp_highest:device=1:sensor=2                                     |
|            Device 1 temp_highest for sensor 2                                |
--------------------------------------------------------------------------------
| amd_smi:::temp_current:device=1:sensor=7                                     |
|            Device 1 temp_current for sensor 7                                |
--------------------------------------------------------------------------------
| amd_smi:::temp_max:device=1:sensor=7                                         |
|            Device 1 temp_max for sensor 7                                    |
--------------------------------------------------------------------------------
| amd_smi:::temp_min:device=1:sensor=7                                         |
|            Device 1 temp_min for sensor 7                                    |
--------------------------------------------------------------------------------
| amd_smi:::temp_max_hyst:device=1:sensor=7                                    |
|            Device 1 temp_max_hyst for sensor 7                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_min_hyst:device=1:sensor=7                                    |
|            Device 1 temp_min_hyst for sensor 7                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_critical:device=1:sensor=7                                    |
|            Device 1 temp_critical for sensor 7                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_critical_hyst:device=1:sensor=7                               |
|            Device 1 temp_critical_hyst for sensor 7                          |
--------------------------------------------------------------------------------
| amd_smi:::temp_emergency:device=1:sensor=7                                   |
|            Device 1 temp_emergency for sensor 7                              |
--------------------------------------------------------------------------------
| amd_smi:::temp_emergency_hyst:device=1:sensor=7                              |
|            Device 1 temp_emergency_hyst for sensor 7                         |
--------------------------------------------------------------------------------
| amd_smi:::temp_crit_min:device=1:sensor=7                                    |
|            Device 1 temp_crit_min for sensor 7                               |
--------------------------------------------------------------------------------
| amd_smi:::temp_crit_min_hyst:device=1:sensor=7                               |
|            Device 1 temp_crit_min_hyst for sensor 7                          |
--------------------------------------------------------------------------------
| amd_smi:::temp_offset:device=1:sensor=7                                      |
|            Device 1 temp_offset for sensor 7                                 |
--------------------------------------------------------------------------------
| amd_smi:::temp_lowest:device=1:sensor=7                                      |
|            Device 1 temp_lowest for sensor 7                                 |
--------------------------------------------------------------------------------
| amd_smi:::temp_highest:device=1:sensor=7                                     |
|            Device 1 temp_highest for sensor 7                                |
--------------------------------------------------------------------------------
| amd_smi:::fan_rpms:device=0:sensor=0                                         |
|            Device 0 fan speed in RPM                                         |
--------------------------------------------------------------------------------
| amd_smi:::fan_speed:device=0:sensor=0                                        |
|            Device 0 fan speed (0-255 relative)                               |
--------------------------------------------------------------------------------
| amd_smi:::fan_rpms:device=1:sensor=0                                         |
|            Device 1 fan speed in RPM                                         |
--------------------------------------------------------------------------------
| amd_smi:::fan_speed:device=1:sensor=0                                        |
|            Device 1 fan speed (0-255 relative)                               |
--------------------------------------------------------------------------------
| amd_smi:::mem_total_VRAM:device=0                                            |
|            Device 0 total VRAM memory (bytes)                                |
--------------------------------------------------------------------------------
| amd_smi:::mem_usage_VRAM:device=0                                            |
|            Device 0 VRAM memory usage (bytes)                                |
--------------------------------------------------------------------------------
| amd_smi:::mem_total_VRAM:device=1                                            |
|            Device 1 total VRAM memory (bytes)                                |
--------------------------------------------------------------------------------
| amd_smi:::mem_usage_VRAM:device=1                                            |
|            Device 1 VRAM memory usage (bytes)                                |
--------------------------------------------------------------------------------
| amd_smi:::power_average:device=0                                             |
|            Device 0 average power consumption (W)                            |
--------------------------------------------------------------------------------
| amd_smi:::power_cap:device=0                                                 |
|            Device 0 current power cap (W)                                    |
--------------------------------------------------------------------------------
| amd_smi:::power_cap_range_min:device=0                                       |
|            Device 0 minimum allowed power cap (W)                            |
--------------------------------------------------------------------------------
| amd_smi:::power_cap_range_max:device=0                                       |
|            Device 0 maximum allowed power cap (W)                            |
--------------------------------------------------------------------------------
| amd_smi:::power_average:device=1                                             |
|            Device 1 average power consumption (W)                            |
--------------------------------------------------------------------------------
| amd_smi:::power_cap:device=1                                                 |
|            Device 1 current power cap (W)                                    |
--------------------------------------------------------------------------------
| amd_smi:::power_cap_range_min:device=1                                       |
|            Device 1 minimum allowed power cap (W)                            |
--------------------------------------------------------------------------------
| amd_smi:::power_cap_range_max:device=1                                       |
|            Device 1 maximum allowed power cap (W)                            |
--------------------------------------------------------------------------------
| amd_smi:::pci_throughput_sent:device=0                                       |
|            Device 0 PCIe bytes sent per second                               |
--------------------------------------------------------------------------------
| amd_smi:::pci_throughput_received:device=0                                   |
|            Device 0 PCIe bytes received per second                           |
--------------------------------------------------------------------------------
| amd_smi:::pci_throughput_max_packet:device=0                                 |
|            Device 0 PCIe max packet size (bytes)                             |
--------------------------------------------------------------------------------
| amd_smi:::pci_replay_counter:device=0                                        |
|            Device 0 PCIe replay (NAK) counter                                |
--------------------------------------------------------------------------------
| amd_smi:::pci_throughput_sent:device=1                                       |
|            Device 1 PCIe bytes sent per second                               |
--------------------------------------------------------------------------------
| amd_smi:::pci_throughput_received:device=1                                   |
|            Device 1 PCIe bytes received per second                           |
--------------------------------------------------------------------------------
| amd_smi:::pci_throughput_max_packet:device=1                                 |
|            Device 1 PCIe max packet size (bytes)                             |
--------------------------------------------------------------------------------
| amd_smi:::pci_replay_counter:device=1                                        |
|            Device 1 PCIe replay (NAK) counter                                |
--------------------------------------------------------------------------------

Total events reported: 732
